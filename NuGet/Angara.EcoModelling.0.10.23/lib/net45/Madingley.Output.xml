<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Madingley.Output</name>
    </assembly>
    <members>
        <member name="T:Madingley.ArraySDSConvert">
            <summary>
            Methods to convert between SDS objects and values, vectors and arrays
            <todoT>1. Write code to make sure that the dimensions and the grid sizes correspond</todoT>
            <todo>2. Write debug assertions for as many as evantualities as can be thought of</todo>
            <todo>3. Decide whether to exit with error if variable already exists</todo>
            <todo>4. IMPORTANT - dimensions values need to refer to cell centres. Need to think through implications of this</todo>
            </summary>
        </member>
        <member name="M:Madingley.ArraySDSConvert.AddVariable(Microsoft.Research.Science.Data.DataSet,System.String,System.String,System.Int32,System.String[],System.Double,System.Single[])">
            <summary>
            Adds a one-dimensional variable to the specified SDS object with floating point dimension data
            </summary>
            <param name="SDSObject">A reference to an SDS object</param>
            <param name="variableName">The name of the variable to create</param>
            <param name="units">Units of the data</param>
            <param name="numDimensions">The number of dimensions for the new variable</param>
            <param name="namesDimensions">A vector of names of the dimensions for the variable</param>
            <param name="missingValue">The missing value to apply to the new variable</param>
            <param name="dimension1Data">A vector of values of the first dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.AddVariable(Microsoft.Research.Science.Data.DataSet,System.String,System.Int32,System.String[],System.Double,System.String[])">
            <summary>
            Adds a one-dimensional variable to the specified SDS object with string dimension data
            </summary>
            <param name="SDSObject">A reference to an SDS object</param>
            <param name="variableName">The name of the variable to create</param>
            <param name="numDimensions">The number of dimensions for the new variable</param>
            <param name="namesDimensions">A vector of names of the dimensions for the variable</param>
            <param name="missingValue">The missing value to apply to the new variable</param>
            <param name="dimension1Data">A string vector of values of the first dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.AddVariable(Microsoft.Research.Science.Data.DataSet,System.String,System.Int32,System.String[],System.Double,System.Single[],System.Single[])">
            <summary>
            Adds a two-dimensional variable to the specified SDS object with floating point data for both dimensions
            </summary>
            <param name="SDSObject">A reference to an SDS object</param>
            <param name="variableName">The name of the variable to create</param>
            <param name="numDimensions">The number of dimensions for the new variable</param>
            <param name="namesDimensions">A vector of names of the dimensions for the variable</param>
            <param name="missingValue">The missing value to apply to the new variable</param>
            <param name="dimension1Data">A vector of values of the first dimension</param>
            <param name="dimension2Data">A vector of values of the second dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.AddVariable(Microsoft.Research.Science.Data.DataSet,System.String,System.Int32,System.String[],System.Double,System.Single[],System.Single[],System.Single[])">
            <summary>
            Adds a three-dimensional variable to the specified SDS object with floating point data for all three dimensions
            </summary>
            <param name="SDSObject">A reference to an SDS object</param>
            <param name="variableName">The name of the variable to create</param>
            <param name="numDimensions">The number of dimensions for the new variable</param>
            <param name="namesDimensions">A vector of names of the dimensions for the variable</param>
            <param name="missingValue">The missing value to apply to the new variable</param>
            <param name="dimension1Data">A vector of values of the first dimension</param>
            <param name="dimension2Data">A vector of values of the second dimension</param>
            <param name="dimension3Data">A vector of values of the third dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.AddVariable(Microsoft.Research.Science.Data.DataSet,System.String,System.Int32,System.String[],System.Double,System.Single[],System.Single[],System.Single[],System.Single[])">
            <summary>
            Adds a four-dimensional variable to the specified SDS object with floating point data for all four dimensions
            </summary>
            <param name="SDSObject">A reference to an SDS object</param>
            <param name="variableName">The name of the variable to create</param>
            <param name="numDimensions">The number of dimensions for the new variable</param>
            <param name="namesDimensions">A vector of names of the dimensions for the variable</param>
            <param name="missingValue">The missing value to apply to the new variable</param>
            <param name="dimension1Data">A vector of values for the first dimension</param>
            <param name="dimension2Data">A vector of values for the second dimension</param>
            <param name="dimension3Data">A vector of values for the third dimension</param>
            <param name="dimension4Data">A vector of values for the fourth dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.ValueToSDS1D(System.Double,System.String,System.String,System.Double,Microsoft.Research.Science.Data.DataSet,System.Int32)">
            <summary>
            Adds a double value to an one-dimensional variable in an SDS object at the specified offset in the dimension
            </summary>
            <param name="dataToConvert">The value to add to the SDS object</param>
            <param name="outputVariableName">The name of the variable to add the data to</param>
            <param name="dimensionName">The name of the dimension variable of the output variable</param>
            <param name="missingValue">The value used for missing data</param>
            <param name="SDSObject">The SDS object to write to</param>
            <param name="dimensionOffset">The required offset in the dimension variable</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.ValueToSDS2D(System.Double,System.String,System.String[],System.Double,Microsoft.Research.Science.Data.DataSet,System.Int32,System.Int32)">
            <summary>
            Adds a double value to a two-dimensional variable in an SDS object at the specified offsets in both dimensions
            </summary>
            <param name="dataToConvert">The value to add to the SDS object</param>
            <param name="outputVariableName">The name of the variable to add the data to</param>
            <param name="dimensionNames">A vector containing the names of the dimensions of the output variable</param>
            <param name="missingValue">The value to be used for missing data</param>
            <param name="SDSObject">The SDS object to write to</param>
            <param name="dimension1Offset">The required offset in the first dimension</param>
            <param name="dimension2Offset">The required offset in the second dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.ValueToSDS3D(System.Double,System.String,System.String[],System.Double,Microsoft.Research.Science.Data.DataSet,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a double value to a three-dimensional variable in an SDS object at the specified offsets in all three dimensions
            </summary>
            <param name="dataToConvert">The value to add to the SDS object</param>
            <param name="outputVariableName">The name of the variable to add the data to</param>
            <param name="dimensionNames">A vector containing the names of the dimensions of the output variable</param>
            <param name="missingValue">The value to be used for missing data</param>
            <param name="SDSObject">The SDS object to write to</param>
            <param name="dimension1Offset">The required offset in the first dimension</param>
            <param name="dimension2Offset">The required offset in the second dimension</param>
            <param name="dimension3Offset">The required offset in the third dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.VectorToSDS1D(System.Double[],System.String,System.String,System.Single[],System.Double,Microsoft.Research.Science.Data.DataSet)">
            <summary>
            Adds a vector of double values to a one-dimensional variable in an SDS object
            </summary>
            <param name="dataToConvert">The vector of values to add</param>
            <param name="outputVariableName">The name of the variable to write to</param>
            <param name="dimensionName">The name of the dimension variable of the output variable</param>
            <param name="dimensionValues">The values of the dimension variable</param>
            <param name="missingValue">The value used for missing data</param>
            <param name="SDSObject">The SDS object to write to</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.VectorToSDS2D(System.Double[],System.String,System.String[],System.Single[],System.Single[],System.Double,Microsoft.Research.Science.Data.DataSet,System.Int32)">
            <summary>
            Adds a vector of values to a two-dimensional variable in an SDS object at the specified offset in the first dimension
            </summary>
            <param name="dataToConvert">The vector of values to add</param>
            <param name="outputVariableName">The name of the variable to write to</param>
            <param name="dimensionNames">A vector containing the names of the dimension variables</param>
            <param name="dimension1Data">The values of the first dimension variable</param>
            <param name="dimension2Data">The values of the second dimension</param>
            <param name="missingValue">The value used for missing data</param>
            <param name="SDSObject">The SDS object to write to</param>
            <param name="dimension1Offset">The required offset in the first dimension</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.Array2DToSDS2D(System.Double[0:,0:],System.String,System.Single[],System.Single[],System.Double,Microsoft.Research.Science.Data.DataSet)">
            <summary>
            Adds a geographical array of values to a two-dimensional variable in an SDS object
            </summary>
            <param name="dataToConvert">The array of values to add</param>
            <param name="ouputVariableName">The name of the variable to write to</param>
            <param name="lats">The values of the latitude dimension variable</param>
            <param name="lons">The values of the longitude dimension variable</param>
            <param name="missingValue">The value used for missing data</param>
            <param name="SDSObject">The SDS object to write to</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.Array2DToSDS2D(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.String,System.String,System.String,System.String,Microsoft.Research.Science.Data.DataSet,Madingley.FunctionalGroupDefinitions,Madingley.MadingleyModelInitialisation)">
            <summary>
            Extract an array of values from a state variable in a model grid and add to a two-dimensional variable in an SDS object
            </summary>
            <param name="ecosystemModelGrid">The model grid to extract data from</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="gridVariableName">The name of the state variable in the model grid</param>
            <param name="traitValue">The trait value of the functional groups to get data for</param>
            <param name="variableType">The type of the state variable: 'stock' or 'cohort'</param>
            <param name="outputVariableName">The name of the variable to write to</param>
            <param name="SDSObject">The SDS object to write to</param>
            <param name="functionalGroupHandler">The functional group handler corresponding to cohorts or stocks</param>
            <param name="initialisation">The Madingley Model initialisation</param>
        </member>
        <member name="M:Madingley.ArraySDSConvert.Array2DToSDS3D(System.Double[0:,0:],System.String,System.String[],System.Int32,System.Double,Microsoft.Research.Science.Data.DataSet)">
            <summary>
            Outputs a two-dimensional array to a three-dimensional variable in an SDS object, with specified offset for the third dimension
            </summary>
            <param name="dataToConvert">An array of values to output</param>
            <param name="newVariableName">The name of the variable to be created or written to</param>
            <param name="dimensionNames">A vector containing the names of the dimensions of the output variable</param>
            <param name="thirdDimensionOffset">The offset to be applied in the third dimension</param>
            <param name="missingValue">The missing value to be used</param>
            <param name="SDSObject">A reference to an SDS object</param>
        </member>
        <member name="T:Madingley.Cohort">
            <summary>
            Class to hold properties of a single cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._BirthTimeStep">
            <summary>
            Time step when the cohort was generated
            </summary>
        </member>
        <member name="F:Madingley.Cohort._MaturityTimeStep">
            <summary>
            The time step at which this cohort reached maturity
            </summary>
        </member>
        <member name="F:Madingley.Cohort._CohortID">
            <summary>
            A list of all cohort IDs ever associated with individuals in this current cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._JuvenileMass">
            <summary>
            The mean juvenile mass of individuals in this cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._AdultMass">
            <summary>
            The mean mature adult mass of individuals in this cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._IndividualBodyMass">
            <summary>
            The mean body mass of an individual in this cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._IndividualReproductivePotentialMass">
            <summary>
            Individual biomass assigned to reproductive potential
            </summary>
        </member>
        <member name="F:Madingley.Cohort._MaximumAchievedBodyMass">
            <summary>
            The maximum mean body mass ever achieved by individuals in this cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._CohortAbundance">
            <summary>
            The number of individuals in the cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._FunctionalGroupIndex">
            <summary>
            The index of the functional group that the cohort belongs to
            </summary>
        </member>
        <member name="F:Madingley.Cohort._Merged">
            <summary>
            Whether this cohort has ever been merged with another cohort
            </summary>
        </member>
        <member name="F:Madingley.Cohort._ProportionTimeActive">
            <summary>
            The proportion of the timestep for which this cohort is active
            </summary>
        </member>
        <member name="F:Madingley.Cohort._TrophicIndex">
            <summary>
            The trophic index for this cohort at this time
            </summary>
        </member>
        <member name="F:Madingley.Cohort._LogOptimalPreyBodySizeRatio">
            <summary>
            The optimal prey body size for individuals in this cohort
            </summary>
        </member>
        <member name="M:Madingley.Cohort.#ctor(System.Byte,System.Double,System.Double,System.Double,System.Double,System.Double,System.UInt16,System.Double,System.Int64@,System.Double,System.Boolean)">
            <summary>
            Constructor for the Cohort class: assigns cohort starting properties
            </summary>
            <param name="functionalGroupIndex">The functional group index of the cohort being generated</param>
            <param name="juvenileBodyMass">The mean juvenile body mass of individuals in the cohort</param>
            <param name="adultBodyMass">The mean mature adult body mass of individuals in the cohort</param>
            <param name="initialBodyMass">The intial mean body mass of individuals in this cohort</param>
            <param name="initialAbundance">The intial number of individuals in this cohort</param>
            <param name="optimalPreyBodySizeRatio">The optimal prey body mass (as a percentage of this cohorts mass) for individuals in this cohort</param>
            <param name="birthTimeStep">The birth time step for this cohort</param>
            <param name="proportionTimeActive">The proportion of time that the cohort will be active for</param>
            <param name="nextCohortID">The unique ID to assign to the next cohort created</param>
            <param name="trophicIndex">The trophic level index of the cohort</param>
            <param name="tracking">Whether the process tracker is enabled</param>
        </member>
        <member name="P:Madingley.Cohort.BirthTimeStep">
            <summary>
            Get time step when the cohort was generated
            </summary>
        </member>
        <member name="P:Madingley.Cohort.MaturityTimeStep">
            <summary>
            Get and set the time step at which this cohort reached maturity
            </summary>
        </member>
        <member name="P:Madingley.Cohort.CohortID">
            <summary>
            Get the list of all cohort IDs ever associated with individuals in this current cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.JuvenileMass">
            <summary>
            Get the mean juvenile mass of individuals in this cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.AdultMass">
            <summary>
            Get the mean mature adult mass of individuals in this cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.IndividualBodyMass">
            <summary>
            Get or set the mean body mass of an individual in this cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.IndividualReproductivePotentialMass">
            <summary>
            Get or set the individual biomass assigned to reproductive potential
            </summary>
        </member>
        <member name="P:Madingley.Cohort.MaximumAchievedBodyMass">
            <summary>
            Get or set the maximum mean body mass ever achieved by individuals in this cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.CohortAbundance">
            <summary>
            Get or set the number of individuals in the cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.FunctionalGroupIndex">
            <summary>
            Get the index of the functional group that the cohort belongs to
            </summary>
        </member>
        <member name="P:Madingley.Cohort.Merged">
            <summary>
            Get or set whether this cohort has ever been merged with another cohort
            </summary>
        </member>
        <member name="P:Madingley.Cohort.ProportionTimeActive">
            <summary>
            Get and set the proportion of time for which this cohort is active
            </summary>
        </member>
        <member name="P:Madingley.Cohort.TrophicIndex">
            <summary>
            Get and set the trophic index
            </summary>
        </member>
        <member name="P:Madingley.Cohort.LogOptimalPreyBodySizeRatio">
            <summary>
            Get and set the optimal prey body size for individuals in this cohort
            </summary>
        </member>
        <member name="T:Madingley.CreateSDSObject">
            <summary>
            Class for creating Scientific Dataset objects
            </summary>
        </member>
        <member name="M:Madingley.CreateSDSObject.CreateSDSInMemory(System.Boolean)">
            <summary>
            Create an SDS object in memory
            </summary>
            <param name="shared">Boolean indicating whether a shared dataset is required</param>
            <returns>The new dataset object</returns>
        </member>
        <member name="M:Madingley.CreateSDSObject.CreateSDS(System.String,System.String,System.String)">
            <summary>
            Create an SDS object as an output file
            </summary>
            <param name="sdsType">The type of output file to create, currently must be NetCDF</param>
            <param name="sdsName">The name to assign to the output file</param>
            <param name="outputPath">The path to the output folder</param>
            <returns>The new dataset object</returns>
        </member>
        <member name="T:Madingley.FunctionalGroupDefinitions">
            <summary>
            Reads in and performs look-ups on functional group definitions
            </summary>
            <remarks>Mass bins values currently defined as middle of each mass bins</remarks>
            <todoM>Throw error if there are any blanks in csv file</todoM>
        </member>
        <member name="F:Madingley.FunctionalGroupDefinitions.InternalData">
            <summary>
            An internal version of the dataset to query if necessary
            </summary>
        </member>
        <member name="F:Madingley.FunctionalGroupDefinitions.IndexLookupFromTrait">
            <summary>
            A dictionary to allow functional group indices to be looked up based on trait values
            </summary>
        </member>
        <member name="F:Madingley.FunctionalGroupDefinitions._FunctionalGroupProperties">
            <summary>
            A sorted list of all of the properties of functional groups and their values
            </summary>
        </member>
        <member name="F:Madingley.FunctionalGroupDefinitions.TraitLookupFromIndex">
            <summary>
            Dictionary to allow traits of functional groups to be looked up based on the functional group index
            </summary>
        </member>
        <member name="F:Madingley.FunctionalGroupDefinitions._AllFunctionalGroupsIndex">
            <summary>
            A list of the indices of all functional groups in the model
            </summary>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.#ctor(System.String,System.String)">
            <summary>
            Constructor for the functional group definitions: reads in the specified functional group definition file, 
            constructs lookup tables, mass ranges and initial cohort numbers in each functional group
            </summary>
            <param name="fileName">The name of the functional group definition file to be read in</param>
            <param name="outputPath">The path to the output folder, in which to copy the functional group definitions file</param>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetBiologicalPropertyOneFunctionalGroup(System.String,System.Int32)">
            <summary>
            Return the value of a biological parameter for a given parameter and functional group
            </summary>
            <param name="propertyName">The name of the biological parameter</param>
            <param name="functionalGroup">Functional group index</param>
            <returns>The value of the biological parameter for the specified functional group</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetBiologicalPropertyAllFunctionalGroups(System.String)">
            <summary>
            Get values of a functional group property for all functional groups
            </summary>
            <param name="propertyName">The name of the property to get values for</param>
            <returns>The values of a functional group property for all functional groups</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetTraits">
            <summary>
            Retrieves the values for all traits defined in the model
            </summary>
            <returns>String array of traits defined for the model</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetUniqueTraitValues(System.String)">
            <summary>
            Retrieves the trait values for all traits defined in the model
            </summary>
            <param name="Trait">The trait for which trait values are to be found</param>
            <returns>String array of trait values for the specifiec trait</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetTraitValuesAllFunctionalGroups(System.String)">
            <summary>
            Returns a string of Trait Names associated with the specified search trait for all functional group index value
            </summary>
            <param name="searchTrait">The name of the trait to get values for</param>
            <returns>The value of the specified trait for the specified functional group</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetTraitNames(System.String,System.Int32)">
            <summary>
            Returns a string of Trait Names associated with the specified search trait and functional group index value
            </summary>
            <param name="searchTrait">The name of the trait to get values for</param>
            <param name="functionalGroupIndex">The functional group index to return the trait value for</param>
            <returns>The value of the specified trait for the specified functional group</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetAllTraitNames">
            <summary>
            Gets a list of unique trait values for all functional groups
            </summary>
            <returns>A list of unique trait values</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetTraitValues(System.String[],System.Int32)">
            <summary>
            Get the values of a set of specified traits for a specified functional group
            </summary>
            <param name="searchTraits">A vector of trait names to get values for</param>
            <param name="functionalGroupIndex">The functional group index to return trait values for</param>
            <returns>A vector of values of the specified traits for a specified functional group</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetFunctionalGroupIndex(System.String[],System.String[],System.Boolean)">
            <summary>
            Get the functional group indices that have specified values of specified traits
            </summary>
            <param name="searchTraits">Vector of trait names to search for</param>
            <param name="searchTraitValues">Vector of trait values to search for</param>
            <param name="intersection">Whether the intersection of the indices for the traits should be returned, otherwise return the union of the indices</param>
            <returns>A vector of functional group indices with the specified values of the specified traits</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetFunctionalGroupIndex(System.String,System.String,System.Boolean)">
            <summary>
            Function to return the integer index values for functional groups corresponding to given trait and trait value pair combinations.
            Overloaded to accept a single string rather than an array in the traits to search and the trait values - both must be single strings
            </summary>
            <param name="searchTraits">String of Trait names to search for trait values within</param>
            <param name="searchTraitValues">String of string Trait Values to find functional group indices for</param>
            <param name="intersection">Boolean statement indicating if you want the intersection of the indices. Only valid if more than one Trait and Trait Value pair.
            True means give intersection. False means give the union of indices</param>
            <returns>Int array containing functional group indices corresponding to the given search conditions</returns>
        </member>
        <member name="M:Madingley.FunctionalGroupDefinitions.GetNumberOfFunctionalGroups">
            <summary>
            Returns number of functional groups
            </summary>
            <returns>Number of functional groups</returns>
        </member>
        <member name="P:Madingley.FunctionalGroupDefinitions.FunctionalGroupProperties">
            <summary>
            Get and set the sorted list of all of the properties of functional groups and their values
            </summary>
        </member>
        <member name="P:Madingley.FunctionalGroupDefinitions.AllFunctionalGroupsIndex">
            <summary>
            Get the list of the indices of all functional groups in the model
            </summary>
        </member>
        <member name="T:Madingley.GridCell">
            <summary>
            Stores properties of grid cells
            <todoD>Remove single valued state-variables and convert model to work with functional groups</todoD>
            <todoD>Check the get/set methods and overloads</todoD>
            <todoD>Convert GetEnviroLayer to field terminology</todoD>
            </summary>
        </member>
        <member name="F:Madingley.GridCell._GridCellCohorts">
            <summary>
            The handler for the cohorts in this grid cell
            </summary>
        </member>
        <member name="F:Madingley.GridCell._GridCellStocks">
            <summary>
            The handler for the stocks in this grid cell
            </summary>
        </member>
        <member name="F:Madingley.GridCell._CellEnvironment">
            <summary>
            The environmental data for this grid cell
            </summary>
        </member>
        <member name="F:Madingley.GridCell._Deltas">
            <summary>
            Deltas to track changes in biomasses and abundances of cohorts, stocks and environmental biomass pools during ecological processes
            </summary>
        </member>
        <member name="F:Madingley.GridCell._Latitude">
            <summary>
            The latitude of this grid cell
            </summary>
        </member>
        <member name="F:Madingley.GridCell._Longitude">
            <summary>
            The longitude of this grid cell
            </summary>
        </member>
        <member name="F:Madingley.GridCell.RandomNumberGenerator">
            <summary>
            Instance of random number generator to take a time-dependent seed
            </summary>
        </member>
        <member name="F:Madingley.GridCell.Utilities">
            <summary>
            Instance of the class to perform general functions
            </summary>
        </member>
        <member name="M:Madingley.GridCell.GetEnviroLayer(System.String,System.UInt32,System.Boolean@)">
            <summary>
            Gets the value in this grid cell of a specified environmental variable at a specified time interval
            </summary>
            <param name="variableName">The name of the environmental layer from which to extract the value</param>
            <param name="timeInterval">The index of the time interval to return data for (i.e. 0 if it is a yearly variable
            or the month index - 0=Jan, 1=Feb etc. - for monthly variables)</param>
            <param name="variableFound">Returns whether the variable was found in the cell environment</param>
            <returns>The value in this grid cell of a specified environmental variable at a specified time interval</returns>
        </member>
        <member name="P:Madingley.GridCell.GridCellCohorts">
            <summary>
            Get or set the cohorts in this grid cell
            </summary>
        </member>
        <member name="P:Madingley.GridCell.GridCellStocks">
            <summary>
            Get or set the stocks in this grid cell
            </summary>
        </member>
        <member name="P:Madingley.GridCell.CellEnvironment">
            <summary>
            Get the environmental data for this grid cell
            </summary>
        </member>
        <member name="P:Madingley.GridCell.Deltas">
            <summary>
            Get the delta biomasses and abundances for this grid cell
            </summary>
        </member>
        <member name="P:Madingley.GridCell.Latitude">
            <summary>
            Get the latitude of this grid cell
            </summary>
        </member>
        <member name="P:Madingley.GridCell.Longitude">
            <summary>
            Get the longitude of this grid cell
            </summary>
        </member>
        <member name="T:Madingley.GridCellCohortHandler">
            <summary>
            Handles the cohorts in a grid cell
            </summary>
            <todoD>NOTE TO DT: CAN USE COLLECTIONBASE SYNTAX TO ELIMINATE A LOT OF CODE HERE</todoD>
            <todo>Create a wrapper class to handle our array of lists of gridCellCohorts within an individual grid cell</todo>
        </member>
        <member name="F:Madingley.GridCellCohortHandler.GridCellCohorts">
            <summary>
            A list of cohorts in the grid cell
            </summary>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.#ctor">
            <summary>
            Create a new list of cohorts for the grid cell
            </summary>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.#ctor(System.Int32)">
            <summary>
            Create a new list of cohorts of specified length corresponding to the number of functional groups
            </summary>
            <param name="NumFunctionalGroups">The number of functional groups for which there will be cohorts in this grid cell</param>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.#ctor(System.Collections.Generic.List{Madingley.Cohort}[])">
            <summary>
            Update grid cell cohorts with a specified list of cohorts
            </summary>
            <param name="ExistingCohorts">A list of cohorts to update the grid cell cohorts with</param>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.IndexOf(System.Collections.Generic.List{Madingley.Cohort})">
            <summary>
            Get the functional group index a specified cohort
            </summary>
            <param name="cohort">The cohort to return the functional group index for</param>
            <returns>The functional group index of the specified cohort</returns>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.Insert(System.Int32,System.Collections.Generic.List{Madingley.Cohort})">
            <summary>
            Inserts a new list of cohorts at a specified functional group index - CURRENTLY  NOT SUPPORTED
            </summary>
            <param name="index">The index in the list of functional groups to insert the list of cohorts in</param>
            <param name="listOfCohorts">The list of cohorts to insert</param>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.RemoveAt(System.Int32)">
            <summary>
            Removes a list of cohorts in a specified functional group - CURRENTLY NOT SUPPORTED
            </summary>
            <param name="functionalGroupIndex">The index of the functional group to remove the list of cohorts for</param>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.Add(System.Collections.Generic.List{Madingley.Cohort})">
            <summary>
            Adds a list of cohorts at the end of the functional group indices - CURRENTLY NOT SUPPORTED
            </summary>
            <param name="listOfCohorts">The list of cohorts to add</param>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.Clear">
            <summary>
            Currently not implemented
            </summary>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.Contains(System.Collections.Generic.List{Madingley.Cohort})">
            <summary>
            Currently not implemented
            </summary>
            <param name="item">NA</param>
            <returns>NA</returns>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.CopyTo(System.Collections.Generic.List{Madingley.Cohort}[],System.Int32)">
            <summary>
            Currently not implemented
            </summary>
            <param name="array">NA</param>
            <param name="arrayIndex">NA</param>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.Remove(System.Collections.Generic.List{Madingley.Cohort})">
            <summary>
            Currently not implemented
            </summary>
            <param name="item">NA</param>
            <returns>NA</returns>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.GetEnumerator">
            <summary>
            Returns an the grid cell cohorts as an IEnumerator 
            </summary>
            <returns>The grid cell cohorts as an IEnumerator</returns>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Return an IEnumerable as an IEnumerator
            </summary>
            <returns>The IEnumerable as an IEnumerator</returns>
        </member>
        <member name="M:Madingley.GridCellCohortHandler.GetNumberOfCohorts">
            <summary>
            Gets the number of cohorts in this grid cell
            </summary>
        </member>
        <member name="P:Madingley.GridCellCohortHandler.Item(System.Int32)">
            <summary>
            Get or set the list of cohorts for a specified functional group index
            </summary>
            <param name="functionalGroupIndex">The index of the functional group to get or set the list of cohorts for</param>
            <returns>The list of cohorts in the specified functional group</returns>
        </member>
        <member name="P:Madingley.GridCellCohortHandler.Item(System.Int32[])">
            <summary>
            Gets or sets a particular cohort within the grid cell cohorts
            </summary>
            <param name="index">A vector of two values corresponding to the functional group index and the index of the desired cohort within this functional group</param>
            <returns>The specified cohort</returns>
        </member>
        <member name="P:Madingley.GridCellCohortHandler.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets a particular cohort within the grid cell cohorts
            </summary>
            <param name="functionalGroupIndex">The functional group index of the desired cohort</param>
            <param name="cohortIndex">The index of the cohort within the specified functional group</param>
            <returns>The specified cohort</returns>
        </member>
        <member name="P:Madingley.GridCellCohortHandler.Count">
            <summary>
            Gets the number of functional groups in the grid cell cohorts
            </summary>
        </member>
        <member name="P:Madingley.GridCellCohortHandler.IsReadOnly">
            <summary>
            Currently not implemented
            </summary>
        </member>
        <member name="T:Madingley.GridCellCohortsEnum">
            <summary>
            IEnumerator for the grid cell cohorts
            </summary>
        </member>
        <member name="F:Madingley.GridCellCohortsEnum.GridCellCohorts">
            <summary>
            The grid cell cohorts as a vector (with elements corresponding to functional groups) of lists of cohorts
            </summary>
        </member>
        <member name="F:Madingley.GridCellCohortsEnum.position">
            <summary>
            Current position in the vector of lists of cohorts
            </summary>
        </member>
        <member name="M:Madingley.GridCellCohortsEnum.#ctor(System.Collections.Generic.List{Madingley.Cohort}[])">
            <summary>
            Assign the passed set of grid cell cohorts to the internal vector of lists of cohorts 
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Madingley.GridCellCohortsEnum.MoveNext">
            <summary>
            Move to the next element in the vector of lists of cohorts
            </summary>
            <returns>True if the end of the list had not been reached</returns>
        </member>
        <member name="M:Madingley.GridCellCohortsEnum.Reset">
            <summary>
            Move back to the first element in the vector of lists of cohorts
            </summary>
        </member>
        <member name="M:Madingley.GridCellCohortsEnum.Dispose">
            <summary>
            Destructor for the grid cell cohorts enumerator
            </summary>
        </member>
        <member name="P:Madingley.GridCellCohortsEnum.System#Collections#IEnumerator#Current">
            <summary>
            Returns the list of cohorts for the current position (i.e. functional group) in the vector of lists of cohorts
            </summary>
        </member>
        <member name="P:Madingley.GridCellCohortsEnum.Current">
            <summary>
            Get the list of cohorts for the current position (i.e. functional group) in the vector of lists of cohorts
            </summary>
        </member>
        <member name="T:Madingley.GridCellStockHandler">
            <summary>
            Handles the stocks in a grid cell
            </summary>
            <todoD>CAN USE COLLECTIONBASE SYNTAX TO ELIMINATE A LOT OF CODE HERE</todoD>
            <todo>Create a wrapper class to handle our array of lists of gridCellStocks within an individual grid cell</todo>
        </member>
        <member name="F:Madingley.GridCellStockHandler.GridCellStocks">
            <summary>
            A vector (with elements correpsonding to functional groups) of lists of stocks in the current grid cell
            </summary>
        </member>
        <member name="M:Madingley.GridCellStockHandler.#ctor">
            <summary>
            Overloaded constructor for the grid cell stock handler: initialises a new vector of lists of stocks
            </summary>
        </member>
        <member name="M:Madingley.GridCellStockHandler.#ctor(System.Int32)">
            <summary>
            Overloaded constructor for the grid cell stock handler: initialises a new vector of lists of stocks with number of elements equal to the number of functional groups 
            </summary>
            <param name="NumFunctionalGroups">The number of stock functional groups in the model</param>
        </member>
        <member name="M:Madingley.GridCellStockHandler.#ctor(System.Collections.Generic.List{Madingley.Stock}[])">
            <summary>
            Overloaded constructor for the grid cell stock handler: update the grid cell stocks with the a set of existing stocks
            </summary>
            <param name="ExistingStocks"></param>
        </member>
        <member name="M:Madingley.GridCellStockHandler.IndexOf(System.Collections.Generic.List{Madingley.Stock})">
            <summary>
            Get the functional group index of the passed list of stocks
            </summary>
            <param name="item">The list of stocks to get the functional group index for</param>
            <returns>The functional group index of the passed list of stocks</returns>
        </member>
        <member name="M:Madingley.GridCellStockHandler.Insert(System.Int32,System.Collections.Generic.List{Madingley.Stock})">
            <summary>
            NOT CURRENTLY USED
            </summary>
            <param name="index">NOT CURRENTLY USED</param>
            <param name="item">NOT CURRENTLY USED</param>
        </member>
        <member name="M:Madingley.GridCellStockHandler.RemoveAt(System.Int32)">
            <summary>
            NOT CURRENTLY USED
            </summary>
            <param name="index">NOT CURRENTLY USED</param>
        </member>
        <member name="M:Madingley.GridCellStockHandler.Add(System.Collections.Generic.List{Madingley.Stock})">
            <summary>
            NOT CURRENTLY USED
            </summary>
            <param name="item">NOT CURRENTLY USED</param>
        </member>
        <member name="M:Madingley.GridCellStockHandler.Clear">
            <summary>
            NOT CURRENTLY USED
            </summary>
        </member>
        <member name="M:Madingley.GridCellStockHandler.Contains(System.Collections.Generic.List{Madingley.Stock})">
            <summary>
            NOT CURRENTLY USED
            </summary>
            <param name="item">NOT CURRENTLY USED</param>
            <returns>NOT CURRENTLY USED</returns>
        </member>
        <member name="M:Madingley.GridCellStockHandler.CopyTo(System.Collections.Generic.List{Madingley.Stock}[],System.Int32)">
            <summary>
            NOT CURRENTLY USED
            </summary>
            <param name="array">NOT CURRENTLY USED</param>
            <param name="arrayIndex">NOT CURRENTLY USED</param>
        </member>
        <member name="M:Madingley.GridCellStockHandler.Remove(System.Collections.Generic.List{Madingley.Stock})">
            <summary>
            NOT CURRENTLY USED
            </summary>
            <param name="item">NOT CURRENTLY USED</param>
            <returns>NOT CURRENTLY USED</returns>
        </member>
        <member name="M:Madingley.GridCellStockHandler.GetEnumerator">
            <summary>
            Return the grid cell stocks as an IEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Madingley.GridCellStockHandler.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Return an IEnumerable as an IEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Madingley.GridCellStockHandler.Item(System.Int32)">
            <summary>
            Get or set the list of stocks for a specified functional group index
            </summary>
            <param name="index">The functional group index</param>
            <returns>The list of stocks from the specified functional group index</returns>
        </member>
        <member name="P:Madingley.GridCellStockHandler.Item(System.Int32[])">
            <summary>
            Get or set the stock at a specified position within a specified functional group index
            </summary>
            <param name="index">Pair of values corresponding to the functional group index and the position of the stock within this functional group</param>
            <returns>The stock at the specified position</returns>
        </member>
        <member name="P:Madingley.GridCellStockHandler.Count">
            <summary>
            Get the number of stock functional groups
            </summary>
        </member>
        <member name="P:Madingley.GridCellStockHandler.IsReadOnly">
            <summary>
            NOT CURRENTLY USED
            </summary>
        </member>
        <member name="T:Madingley.GridCellStocksEnum">
            <summary>
            IEnumerator for the grid cell stocks
            </summary>
        </member>
        <member name="F:Madingley.GridCellStocksEnum.GridCellStocks">
            <summary>
            The grid cell stocks as a vector (with elements corresponding to functional groups) of lists of stocks
            </summary>
        </member>
        <member name="F:Madingley.GridCellStocksEnum.position">
            <summary>
            Current position in the vector of lists of stocks
            </summary>
        </member>
        <member name="M:Madingley.GridCellStocksEnum.#ctor(System.Collections.Generic.List{Madingley.Stock}[])">
            <summary>
            Assign the passed set of grid cell stocks to the internal vector of lists of stocks 
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Madingley.GridCellStocksEnum.MoveNext">
            <summary>
            Move to the next element in the vector of lists of stocks
            </summary>
            <returns>True if the end of the list had not been reached</returns>
        </member>
        <member name="M:Madingley.GridCellStocksEnum.Reset">
            <summary>
            Move back to the first element in the vector of lists of stocks
            </summary>
        </member>
        <member name="M:Madingley.GridCellStocksEnum.Dispose">
            <summary>
            Destructor for the grid cell stocks enumerator
            </summary>
        </member>
        <member name="P:Madingley.GridCellStocksEnum.System#Collections#IEnumerator#Current">
            <summary>
            Returns the list of stocks for the current position (i.e. functional group) in the vector of lists of stocks
            </summary>
        </member>
        <member name="P:Madingley.GridCellStocksEnum.Current">
            <summary>
            Get the list of stocks for the current position (i.e. functional group) in the vector of lists of stocks
            </summary>
        </member>
        <member name="T:Madingley.ThreadLockedParallelVariables">
            <summary>
            Thread-local variables for tracking extinction and production of cohorts
            </summary>
            <todo>Needs a little tidying and checking of access levels</todo>
        </member>
        <member name="F:Madingley.ThreadLockedParallelVariables.Extinctions">
            <summary>
            Thread-local variable to track the extinction of cohorts
            </summary>
        </member>
        <member name="F:Madingley.ThreadLockedParallelVariables.Productions">
            <summary>
            Thread-local variable to track the production of cohorts
            </summary>
        </member>
        <member name="F:Madingley.ThreadLockedParallelVariables.NextCohortIDThreadLocked">
            <summary>
            Thread-locked variable to track the cohort ID to assign to newly produced cohorts
            </summary>
        </member>
        <member name="P:Madingley.ThreadLockedParallelVariables.Combinations">
            <summary>
            Variable to track the number of cohorts combined
            </summary>
        </member>
        <member name="T:Madingley.MadingleyModel">
            <summary>
            The ecosystem model
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.CohortFunctionalGroupDefinitions">
            <summary>
            An instance of the cohort functional group definitions for this model
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.StockFunctionalGroupDefinitions">
            <summary>
            An instance of the stock functional group definitions for this model
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.EnviroStack">
            <summary>
            A list of environmental data layers
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.EcosystemModelGrid">
            <summary>
            An instance of ModelGrid to hold the grid to be used in this model
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.BottomLatitude">
            <summary>
            The lowest latitude for the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.TopLatitude">
            <summary>
            The upper latitude for the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.LeftmostLongitude">
            <summary>
            The left-most longitude for the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.RightmostLongitude">
            <summary>
            The right-most longitude for the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.CellSize">
            <summary>
            The size of the grid cells in degrees
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.NumTimeSteps">
            <summary>
            The number of time steps in the model run
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.OutputModelStateTimestep">
            <summary>
            The timesteps for which model state should be output 
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.CurrentTimeStep">
            <summary>
            The current time step
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.CurrentMonth">
            <summary>
            The current month: 1=Jan; 2=Feb; 3=Mar etc.
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel._CellList">
            <summary>
            Pairs of longitude and latitude indices for all active cells in the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.GlobalDiagnosticVariables">
            <summary>
            A list of global diagnostics for this model run
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.RunGridCellsInParallel">
            <summary>
            Whether the model will run in parallel (default  is false)
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.SpecificLocations">
            <summary>
            Whether the model will be run for specific locations, instead of for the whole model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.TimeStepTimer">
            <summary>
            An instance of StopWatch to time individual time steps
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.CellOutputs">
            <summary>
            An array of instances of the output class to deal with grid cell outputs
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.ProcessTrackers">
            <summary>
            An array of indices of process trackers for each grid cell
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.TrackCrossCellProcesses">
            <summary>
            An instance of a cross-cell process tracker
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.TrackGlobalProcesses">
            <summary>
            An instance of a global process tracker to track global data across the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.WriteModelState">
            <summary>
            An instance of OutputModelState to output the state of all
            cohorts and stocks in the model at a particular time
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.GlobalOutputs">
            <summary>
            An instance of the output class to deal with global outputs
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.GridOutputs">
            <summary>
            An instance of the output class to deal with gridded outputs
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.OutputFilesSuffix">
            <summary>
            The suffix to be applied to files output by this model instance
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.InitialisationFileStrings">
            <summary>
            A sorted list of strings from the initialisation file
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModel.Dispersals">
            <summary>
            Variable to track the number of cohorts that have dispersed. Doesn't need to be thread-local because all threads have converged prior to running cross-grid-cell processes
            </summary>
        </member>
        <member name="M:Madingley.MadingleyModel.#ctor(Madingley.MadingleyModelInitialisation,Madingley.ScenarioParameterInitialisation,System.Int32,System.String,System.String,System.Int32,Madingley.GridCell[],System.Collections.Generic.SortedList{System.String,System.Double})">
            <summary>
            Initializes the ecosystem model
            </summary>
            <param name="initialisation">An instance of the model initialisation class</param> 
            <param name="scenarioParameters">The parameters for the scenarios to run</param>
            <param name="scenarioIndex">The index of the scenario being run</param>
            <param name="outputFilesSuffix">The suffix to be applied to all outputs from this model run</param>
            <param name="globalModelTimeStepUnit">The time step unit used in the model</param>
            <param name="simulation">The index of the simulation being run</param>
            <param name="gridCells">Array of specific locations</param>
            <param name="globalDiagnosticVariables">Global diagnostic variables</param>
        </member>
        <member name="M:Madingley.MadingleyModel.AssignModelRunProperties(Madingley.MadingleyModelInitialisation,Madingley.ScenarioParameterInitialisation,System.Int32,System.String)">
            <summary>
            Assigns the properties of the current model run
            </summary>
            <param name="initialisation">An instance of the model initialisation class</param> 
            <param name="scenarioParameters">The parameters for the scenarios to run</param>
            <param name="scenarioIndex">The index of the scenario that this model is to run</param>
            <param name="outputFilesSuffix">The suffix to be applied to all outputs from this model run</param>
        </member>
        <member name="M:Madingley.MadingleyModel.SetUpOutputs(Madingley.MadingleyModelInitialisation,System.Int32,System.Int32)">
            <summary>
            Sets up the model outputs
            </summary>
            <param name="initialisation">An instance of the model initialisation class</param>
            <param name="simulation">The index of the simulation being run</param>
            <param name="scenarioIndex">The index of the scenario being run</param>
        </member>
        <member name="M:Madingley.MadingleyModel.SetUpModelGrid(Madingley.MadingleyModelInitialisation,Madingley.ScenarioParameterInitialisation,System.Int32,System.Int32,Madingley.GridCell[])">
            <summary>
            Sets up the model grid within a Madingley model run
            </summary>
            <param name="initialisation">An instance of the model initialisation class</param> 
            <param name="scenarioParameters">The parameters for the scenarios to run</param>
            <param name="scenarioIndex">The index of the scenario that this model is to run</param>
            <param name="simulation">Which simulation to run?</param>
            <param name="gridCells">Array of specific locations</param>
        </member>
        <member name="M:Madingley.MadingleyModel.InitialOutputs(System.String,Madingley.MadingleyModelInitialisation,System.UInt32)">
            <summary>
            Generates the initial outputs for this model run
            </summary>
            <param name="outputFilesSuffix">The suffix to be applied to all outputs from this model run</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="month">The current month in the model run</param>
        </member>
        <member name="T:Madingley.ModelGrid">
            <summary>
            A class containing the model grid (composed of individual grid cells) along with grid attributes.
            The model grid is referenced by [Lat index, Lon index]\
            <todoD>Check Set and Get state variable methods</todoD>
            </summary>
        </member>
        <member name="F:Madingley.ModelGrid._GridCellRarefaction">
            <summary>
            The rarefaction of grid cells to be applied to active cells in the model grid
            </summary>
        </member>
        <member name="F:Madingley.ModelGrid._NumLatCells">
            <summary>
            The number of latitudinal cells in the model grid
            </summary>
        </member>
        <member name="F:Madingley.ModelGrid._NumLonCells">
            <summary>
            The number of longitudinal cells in the model grid
            </summary>
        </member>
        <member name="F:Madingley.ModelGrid._Lats">
            <summary>
            The bottom (southern-most) latitude of each row of grid cells
            </summary>
        </member>
        <member name="F:Madingley.ModelGrid._Lons">
            <summary>
            The left (western-most) longitude of each column of grid cells
            </summary>
        </member>
        <member name="F:Madingley.ModelGrid.InternalGrid">
            <summary>
            Array of grid cells
            </summary>
        </member>
        <member name="M:Madingley.ModelGrid.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,Madingley.GridCell[0:,0:],Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.SortedList{System.String,System.Double},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor for model grid: assigns grid properties and initialises the grid cells
            </summary>
            <param name="minLat">Minimum grid latitude (degrees)</param>
            <param name="minLon">Minimum grid longitude (degrees, currently -180 to 180)</param>
            <param name="maxLat">Maximum grid latitude (degrees)</param>
            <param name="maxLon">Maximum grid longitude (degrees, currently -180 to 180)</param>
            <param name="latCellSize">Latitudinal resolution of grid cell</param>
            <param name="lonCellSize">Longitudinal resolution of grid cell</param>
            <param name="cellRarefaction">The rarefaction to be applied to active grid cells in the model</param>
            <param name="gridCells">Environmental data layers</param>
            <param name="cohortFunctionalGroups">The functional group definitions for cohorts in the model</param>
            <param name="stockFunctionalGroups">The functional group definitions for stocks in the model</param>
            <param name="globalDiagnostics">Global daignostic variables</param>
            <param name="tracking">Whether process-tracking is enabled</param>
            <param name="DrawRandomly">Whether the model is set to use a random draw</param>
            <param name="specificLocations">Whether the model is to be run for specific locations</param>
        </member>
        <member name="M:Madingley.ModelGrid.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{System.UInt32[]},Madingley.GridCell[],Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.SortedList{System.String,System.Double},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Overloaded constructor for model grid to construct the grid for specific locations
            </summary>
            <param name="minLat">Minimum grid latitude (degrees)</param>
            <param name="minLon">Minimum grid longitude (degrees, currently -180 to 180)</param>
            <param name="maxLat">Maximum grid latitude (degrees)</param>
            <param name="maxLon">Maximum grid longitude (degrees, currently -180 to 180)</param>
            <param name="latCellSize">Latitudinal size of grid cells</param>
            <param name="lonCellSize">Longitudinal size of grid cells</param>
            <param name="cellList">List of indices of active cells in the model grid</param>
            <param name="gridCells">List of environmental data layers</param>
            <param name="cohortFunctionalGroups">The functional group definitions for cohorts in the model</param>
            <param name="stockFunctionalGroups">The functional group definitions for stocks in the model</param>
            <param name="globalDiagnostics">Global diagnostic variables</param>
            <param name="tracking">Whether process tracking is enabled</param>
            <param name="specificLocations">Whether the model is to be run for specific locations</param>
            <param name="runInParallel">Whether model grid cells will be run in parallel</param>
        </member>
        <member name="M:Madingley.ModelGrid.GetGridCellStocks(System.UInt32,System.UInt32)">
            <summary>
            Returns the stocks within the specified grid cell
            </summary>
            <param name="latIndex">Latitude index</param>
            <param name="lonIndex">Longitude index</param>
            <returns>The stock handler for the specified grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetGridCellCohorts(System.UInt32,System.UInt32)">
            <summary>
            Returns the array (indexed by functional group) of lists of gridCellCohorts for the specified grid cell
            </summary>
            <param name="latIndex">Latitude index of grid cell</param>
            <param name="lonIndex">Longitude index of grid cell</param>
            <returns>Arry (indexed by functional group) of lists of gridCellCohorts</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetEnviroLayer(System.String,System.UInt32,System.UInt32,System.UInt32,System.Boolean@)">
            <summary>
            Return the value of a specified environmental layer from an individual grid cell
            </summary>
            <param name="variableName">The name of the environmental lyaer</param>
            <param name="timeInterval">The desired time interval within the environmental variable (i.e. 0 if it is a yearly variable
            or the month index - 0=Jan, 1=Feb etc. - for monthly variables)</param>
            <param name="latCellIndex">The latitudinal cell index</param>
            <param name="lonCellIndex">The longitudinal cell index</param>
            <param name="variableExists">Returns false if the environmental layer does not exist, true if it does</param>
            <returns>The value of the environmental layer, or a missing value if the environmental layer does not exist</returns>
        </member>
        <member name="M:Madingley.ModelGrid.StateVariableGridTotal(System.String,System.String,System.Int32[],System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Get the total of a state variable for specific cells
            </summary>
            <param name="variableName">The name of the variable</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">A vector of functional group indices to consider</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="stateVariableType">A string indicating the type of state variable; 'cohort' or 'stock'</param>
            <param name="initialisation">The Madingley Model intialisation</param>
            <returns>Summed value of variable over whole grid</returns>
            <todo>Overload to work with vector and array state variables</todo>
        </member>
        <member name="M:Madingley.ModelGrid.GetStateVariable(System.String,System.String,System.Int32[],System.UInt32,System.UInt32,System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Gets a state variable for specified functional groups of specified entity types in a specified grid cell
            </summary>
            <param name="variableName">The name of the variable to get: 'biomass' or 'abundance'</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">The functional group indices to get the state variable for</param>
            <param name="latCellIndex">The latitudinal index of the cell</param>
            <param name="lonCellIndex">The longitudinal index of the cell</param>
            <param name="stateVariableType">The type of entity to return the state variable for: 'stock' or 'cohort'</param>
            <param name="modelInitialisation">The Madingley Model initialisation</param>
            <returns>The state variable for specified functional groups of specified entity types in a specified grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetStateVariableDensity(System.String,System.String,System.Int32[],System.UInt32,System.UInt32,System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Gets a state variable density for specified functional groups of specified entity types in a specified grid cell
            </summary>
            <param name="variableName">The name of the variable to get: 'biomass' or 'abundance'</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">The functional group indices to get the state variable for</param>
            <param name="latCellIndex">The latitudinal index of the cell</param>
            <param name="lonCellIndex">The longitudinal index of the cell</param>
            <param name="stateVariableType">The type of entity to return the state variable for: 'stock' or 'cohort'</param>
            <param name="modelInitialisation">The Madingley Model initialisation</param>
            <returns>The state variable density for specified functional groups of specified entity types in a specified grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.StateVariableGridMeanDensity(System.String,System.String,System.Int32[],System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Get the mean density of a state variable for specific cells
            </summary>
            <param name="variableName">The name of the variable</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">A vector of functional group indices to consider</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="stateVariableType">A string indicating the type of state variable; 'cohort' or 'stock'</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <returns>Mean density of variable over whole grid</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetStateVariableGrid(System.String,System.String,System.Int32[],System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Return an array of values for a single state variable over specific cells
            </summary>
            <param name="variableName">Variable name</param>
            <param name="traitValue">The trait values of functional groups to get data for</param>
            <param name="functionalGroups">A vector of functional group indices to consider</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="stateVariableType">A string indicating the type of state variable; 'cohort' or 'stock'</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <returns>Array of state variable values for each grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetStateVariableGridDensityPerSqKm(System.String,System.String,System.Int32[],System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Return an array of values for a single state variable over specific cells, given in densities per km^2
            </summary>
            <param name="variableName">Variable name</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">A vector of functional group indices to consider</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="stateVariableType">A string indicating the type of state variable; 'cohort' or 'stock'</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <returns>Array of state variable values for each grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetStateVariableGridLog(System.String,System.String,System.Int32[],System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Return an array of log(values + 1) for a state variable for particular functional groups over specific cells. State variable (currently only biomass or abundance) must be >= 0 in all grid cells
            </summary>
            <param name="variableName">The name of the variable</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">A vector of functional group indices to consider</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="stateVariableType">A string indicating the type of state variable; 'cohort' or 'stock'</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <returns>Array of log(state variable values +1 ) for each grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetStateVariableGridLogDensityPerSqKm(System.String,System.String,System.Int32[],System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Return an array of log(values + 1) for a state variable for particular functional groups over specific cells. State variable (currently only biomass or abundance) must be >= 0 in all grid cells
            </summary>
            <param name="variableName">The name of the variable</param>
            <param name="traitValue">The functional group trait value to get data for</param>
            <param name="functionalGroups">A vector of functional group indices to consider</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="stateVariableType">A string indicating the type of state variable; 'cohort' or 'stock'</param>
            <param name="initialisation">The Madingley Model intialisation</param>
            <returns>Array of log(state variable values +1 ) for each grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetCellLongitude(System.UInt32)">
            <summary>
            Return the longitude of a cell at a particular lon. index
            </summary>
            <param name="cellLonIndex">The longitudinal index (i.e. row) of the cell</param>
            <returns>Returns the longitude of the bottom of the cell, in degrees</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetCellLatitude(System.UInt32)">
            <summary>
            Return the latitude of a cell at a particular lat. index
            </summary>
            <param name="cellLatIndex">The latitudinal index (i.e. row) of the cell</param>
            <returns>Returns the latitude of the bottom of the cell, in degrees</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetCellEnvironment(System.UInt32,System.UInt32)">
            <summary>
            A method to return the values for all environmental data layers for a particular grid cell
            </summary>
            <param name="cellLatIndex">Latitude index of grid cell</param>
            <param name="cellLonIndex">Longitude index of grid cell</param>
            <returns>A sorted list containing environmental data layer names and values</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetEnviroGrid(System.String,System.UInt32)">
            <summary>
            Get a grid of values for an environmental data layer
            </summary>
            <param name="enviroVariable"> The name of the environmental data layer</param>
            <param name="timeInterval">The desired time interval within the environmental variable (i.e. 0 if it is a yearly variable
            or the month index - 0=Jan, 1=Feb etc. - for monthly variables)</param>
            <returns>The values in each grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetEnviroGrid(System.String,System.UInt32,System.Collections.Generic.List{System.UInt32[]})">
            <summary>
            Get a grid of values for an environmental data layer in specific cells
            </summary>
            <param name="enviroVariable">The name of the environmental data layer to return</param>
            <param name="timeInterval">The desired time interval for which to get data (i.e. 0 if it is a yearly variable
            or the month index - 0=Jan, 1=Feb etc. - for monthly variables)</param>
            <param name="cellIndices">List of active cells in the model grid</param>
            <returns>The values in each grid cell</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetEnviroGridTotal(System.String,System.UInt32)">
            <summary>
            Return the total over the whole grid for an environmental variable
            </summary>
            <param name="enviroVariable">The environmental variable</param>
            <param name="timeInterval">The desired time interval within the environmental variable (i.e. 0 if it is a yearly variable
            or the month index - 0=Jan, 1=Feb etc. - for monthly variables)</param>
            <returns>The total of the variable over the whole grid</returns>
        </member>
        <member name="M:Madingley.ModelGrid.GetEnviroGridTotal(System.String,System.UInt32,System.Collections.Generic.List{System.UInt32[]})">
            <summary>
            Return the sum of an environmental variable over specific cells
            </summary>
            <param name="enviroVariable">The environmental variable</param>
            <param name="timeInterval">The desired time interval within the environmental variable (i.e. 0 if it is a yearly variable
            or the month index - 0=Jan, 1=Feb etc. - for monthly variables)</param>
            <param name="cellIndices">List of active cells in the model grid</param>
            <returns>The total of the variable over the whole grid</returns>
        </member>
        <member name="P:Madingley.ModelGrid.GlobalMissingValue">
            <summary>
            Get the global missing value
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.MinLatitude">
            <summary>
            Get the lower latitude of the lowest cell of the grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.MinLongitude">
            <summary>
            Get the leftmost longitude of the leftmost cell of the grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.MaxLatitude">
            <summary>
            Get the lowest latitude of the highest cell in the grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.MaxLongitude">
            <summary>
            Get the leftmost longitude of the rightmost cell in the grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.LatCellSize">
            <summary>
            Get the latitudinal length of each grid cell. Currently assumes all cells are equal sized.
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.LonCellSize">
            <summary>
            Get the longitudinal length of each grid cell. Currently assumes all cells are equal sized. 
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.GridCellRarefaction">
            <summary>
            Get the rarefaction of grid cells to be applied to active cells in the model grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.NumLatCells">
            <summary>
            Get the number of latitudinal cells in the model grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.NumLonCells">
            <summary>
            Get the number of longitudinal cells in the model grid
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.Lats">
            <summary>
            Get the bottom (southern-most) latitude of each row of grid cells
            </summary>
        </member>
        <member name="P:Madingley.ModelGrid.Lons">
            <summary>
            Get the left (western-most) longitude of each column of grid cells
            </summary>
        </member>
        <member name="T:Madingley.ScenarioParameterInitialisation">
            <summary>
            Reads the file specifying which scenarios will be run, and stores this information
            </summary>
        </member>
        <member name="F:Madingley.ScenarioParameterInitialisation._scenarioNumber">
            <summary>
            The number of scenarios to be run
            </summary>
        </member>
        <member name="F:Madingley.ScenarioParameterInitialisation._scenarioParameters">
            <summary>
            Parameters for all scenarios in the model run
            </summary>
        </member>
        <member name="M:Madingley.ScenarioParameterInitialisation.#ctor(System.String,System.String)">
            <summary>
            Constructor for ScenarioParameterInitialisation: reads in scenario parameters from a specified file
            </summary>
            <param name="scenarioParameterFile">The name of the scenario parameters file, which must be in the 'Model setup' directory</param>
            <param name="outputPath">The directory to write output files to</param>
        </member>
        <member name="P:Madingley.ScenarioParameterInitialisation.scenarioNumber">
            <summary>
            Get the number of scenarios to be run
            </summary>
        </member>
        <member name="P:Madingley.ScenarioParameterInitialisation.scenarioParameters">
            <summary>
            Get the parameters for all scenarios in the model run
            </summary>
        </member>
        <member name="T:Madingley.Stock">
            <summary>
            Hold individual stocks
            </summary>
        </member>
        <member name="F:Madingley.Stock._FunctionalGroupIndex">
            <summary>
            The index of the functional group that the stock belongs to
            </summary>
        </member>
        <member name="F:Madingley.Stock._IndividualBodyMass">
            <summary>
            The mean body mass of an individual in this stock
            </summary>
        </member>
        <member name="F:Madingley.Stock._TotalBiomass">
            <summary>
            The total biomass of the stock
            </summary>
        </member>
        <member name="M:Madingley.Stock.#ctor(System.Byte,System.Double,System.Double)">
            <summary>
            Constructor for stock class. Assigns stock starting properties
            </summary>
            <param name="functionalGroupIndex">The functional group index of the stock being generated</param>
            <param name="individualMass">The individual mass of the stock</param>
            <param name="initialTotalBiomass">The initial total biomass of the stock</param>
        </member>
        <member name="P:Madingley.Stock.FunctionalGroupIndex">
            <summary>
            Get and set the functional group that the stock belongs to
            </summary>
        </member>
        <member name="P:Madingley.Stock.IndividualBodyMass">
            <summary>
            Get and set the mean body mass of an individual in this stock
            </summary>
        </member>
        <member name="P:Madingley.Stock.TotalBiomass">
            <summary>
            Get and set the total biomass of this stock
            </summary>
        </member>
        <member name="T:Madingley.CrossCellProcessTracker">
            <summary>
            Tracks diagnostics about the ecological processes
            </summary>
        </member>
        <member name="F:Madingley.CrossCellProcessTracker._TrackCrossCellProcesses">
            <summary>
            Whether to track cross-cell processes
            </summary>
        </member>
        <member name="F:Madingley.CrossCellProcessTracker._TrackDispersal">
            <summary>
            Instance of the dispersal tracker within the cross-cell tracker
            </summary>
        </member>
        <member name="M:Madingley.CrossCellProcessTracker.#ctor(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Constructor for cross cell process tracker: Initialises the trackers for individual processes
            </summary>
            <param name="trackCrossCellProcesses">Whether to track cross-grid-cell ecological processes</param>
            <param name="filename">The name of the file to output data to</param>
            <param name="outputPath">The path to write the file to</param>
            <param name="outputFileSuffix">The suffix to apply to the output filename</param>
        </member>
        <member name="M:Madingley.CrossCellProcessTracker.RecordDispersalForACell(System.UInt32[0:,0:,0:],System.UInt32[0:,0:,0:],System.Collections.Generic.List{System.Double}[0:,0:],System.UInt32,Madingley.ModelGrid)">
            <summary>
            Record dispersal events in the dispersal tracker
            </summary>
            <param name="inboundCohorts">The cohorts arriving in a cell in the current time step</param>
            <param name="outboundCohorts">The cohorts leaving a cell in the current time step</param>
            <param name="outboundCohortWeights">The body masses of cohorts leaving the cell in the current time step</param>
            <param name="timestep">The current model time step</param>
            <param name="madingleyModelGrid">The model grid</param>
        </member>
        <member name="M:Madingley.CrossCellProcessTracker.CloseStreams">
            <summary>
            Close all tracker streams
            </summary>
        </member>
        <member name="P:Madingley.CrossCellProcessTracker.TrackCrossCellProcesses">
            <summary>
            Get or set whether to track cross-cell processes
            </summary>
        </member>
        <member name="P:Madingley.CrossCellProcessTracker.TrackDispersal">
            <summary>
            Get and set the reproduction tracker
            </summary>
        </member>
        <member name="T:Madingley.DispersalTracker">
            <summary>
            Tracks results associated with cohort extinction
            </summary>
        </member>
        <member name="M:Madingley.DispersalTracker.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for the dispersal tracker: sets up output file
            </summary>
            <param name="dispersalFilename">The filename for the output file</param>
            <param name="outputPath">The path to the output directory</param>
            <param name="outputFilesSuffix">The suffix to be applied to all outputs from this model simulation</param>
        </member>
        <member name="M:Madingley.DispersalTracker.RecordDispersal(System.UInt32[0:,0:,0:],System.UInt32[0:,0:,0:],System.Collections.Generic.List{System.Double}[0:,0:],System.UInt32,Madingley.ModelGrid)">
            <summary>
            Record dispersal events in the dispersal tracker
            </summary>
            <param name="inboundCohorts">The cohorts arriving in a grid cell in the current time step</param>
            <param name="outboundCohorts">The cohorts leaving a ce  ll in the current time step</param>
            <param name="outboundCohortWeights">The body masses of cohorts leaving the cell in the current time step</param>
            <param name="currentTimeStep">The current model time step</param>
            <param name="madingleyModelGrid">The model grid</param>
        </member>
        <member name="M:Madingley.DispersalTracker.CloseStreams">
            <summary>
            Close the output streams for the dispersal tracker
            </summary>
        </member>
        <member name="T:Madingley.EatingTracker">
            <summary>
            Tracks results associated with the eating process
            </summary>
        </member>
        <member name="F:Madingley.EatingTracker.TrophicMassFlows">
            <summary>
            Array to hold flows of mass among trophic levels. Order is:
            Lat, Lon, From (group), To (group)
            </summary>
        </member>
        <member name="M:Madingley.EatingTracker.#ctor(System.UInt32,System.UInt32,System.String,System.String,System.String,System.Int32,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Set up the tracker for outputing properties of the eating process
            </summary>
            <param name="numLats">The number of latitudes in the model grid</param>
            <param name="numLons">The number of longitudes in the model grid</param>
            <param name="trophicFlowsFilename">The filename to write data on trophic flows to</param>
            <param name="outputFilesSuffix">The suffix to apply to output files from this simulation</param>
            <param name="outputPath">The file path to write all outputs to</param>
            <param name="cellIndex">The index of the current cell within the list of all grid cells in this simulation</param>
            <param name="initialisation">The instance of the MadingleyModelInitialisation class for this simulation</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.EatingTracker.RecordPredationTrophicFlow(System.UInt32,System.UInt32,System.Int32,System.Int32,Madingley.FunctionalGroupDefinitions,System.Double,System.Double,System.Double,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Record the flow of biomass between trophic levels during predation
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="fromFunctionalGroup">The index of the functional group that the biomass is flowing from (i.e. the prey)</param>
            <param name="toFunctionalGroup">The index of the functional group that the biomass is flowing to (i.e. the predator)</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="massEaten">The total biomass eaten by the predator cohort</param>
            <param name="predatorBodyMass">The body mass of the predator doing the eating</param>
            <param name="preyBodyMass">The body mass of the prey being eaten</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.EatingTracker.RecordHerbivoryTrophicFlow(System.UInt32,System.UInt32,System.Int32,Madingley.FunctionalGroupDefinitions,System.Double,System.Double,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Record the flow of biomass between trophic levels during herbivory
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="toFunctionalGroup">The index of the functional group that the biomass is flowing to (i.e. the herbivore)</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="massEaten">The total biomass eaten by the herbivore cohort</param>
            <param name="predatorBodyMass">The mass of the predator doing the eating</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.EatingTracker.RecordPrimaryProductionTrophicFlow(System.UInt32,System.UInt32,System.Double)">
            <summary>
            Record the flow of biomass into the autotroph trophic level as a result of primary production
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="massEaten">The total biomass gained by the autotroph stock</param>
        </member>
        <member name="M:Madingley.EatingTracker.WriteTrophicFlows(System.UInt32,System.UInt32,System.UInt32,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Write flows of matter among trophic levels to the output file at the end of the time step
            </summary>
            <param name="currentTimeStep">The current time step</param>
            <param name="numLats">The latitudinal dimension of the model grid in number of cells</param>
            <param name="numLons">The longitudinal dimension of the model grid in number of cells</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.EatingTracker.CloseStreams">
            <summary>
            Close the streams for writing eating data
            </summary>
        </member>
        <member name="T:Madingley.EcosytemMetrics">
            <summary>
            Calculates ecosystem-level metrics
            </summary>
        </member>
        <member name="F:Madingley.EcosytemMetrics._TrophicIndexBinValues">
            <summary>
            The trophic level values associated with each of the trophic level bins
            </summary>
        </member>
        <member name="F:Madingley.EcosytemMetrics._NumberTrophicBins">
            <summary>
            The number of trophic level bins to use in calculating ecosystem-level metrics
            </summary>
        </member>
        <member name="F:Madingley.EcosytemMetrics._RServeProcess">
            <summary>
            Instance of the connection to R
            </summary>
        </member>
        <member name="M:Madingley.EcosytemMetrics.#ctor">
            <summary>
            Constructor for the ecosystem metrics class: sets up trophic level bins
            </summary>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CloseRserve">
            <summary>
            Closes the connection to R (currently disabled)
            </summary>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateMeanTrophicLevelCell(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Calculates the mean trophic level of all individual organisms in a grid cell
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of cell indices in the current model simulation</param>
            <param name="cellIndex">The index of the current cell in the list of cells to run</param>
            <returns>The mean trophic level of individuals in the grid cell</returns>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateTrophicDistribution(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Return the distribution of biomasses among trophic level bins
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of cell indices to be run in the current model simulation</param>
            <param name="cellIndex">The index of the current cell in the list of cells to be run</param>
            <returns>The distribution of biomasses among trophic level bins</returns>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateFunctionalEvennessRao(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.String)">
            <summary>
            Calculate trophic evenness using the Rao Index
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of indices of cells to be run in the current simulation</param>
            <param name="cellIndex">The index of the current cell within the list of cells to be run</param>
            <returns>Trophic evenness</returns>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateArithmeticCommunityMeanBodyMass(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Calculates the arithmetic community weighted mean body mass
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of indices of cells to be run in the current model simulation</param>
            <param name="cellIndex">The index of the current cell within the list of cells to be run</param>
            <returns>arithmetic community weighted mean body mass</returns>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateGeometricCommunityMeanBodyMass(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Calculates the geometric community weighted mean body mass
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of indices of cells to be run in the current model simulation</param>
            <param name="cellIndex">The index of the current cell within the list of cells to be run</param>
            <returns>geometric community weighted mean body mass</returns>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateTrophicEvennessFRO(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Calculates trophic evenness using the FRO Index of Mouillot et al.
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of indices of cells to be run in the current model simulation</param>
            <param name="cellIndex">The index of the current cell within the list of cells to be run</param>
            <returns>Trophic evenness</returns>
            <remarks>From Mouillot et al (2005) Functional regularity: a neglected aspect of functional diversity, Oecologia</remarks>
        </member>
        <member name="M:Madingley.EcosytemMetrics.CalculateFunctionalDiversity(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Calculates functional diversity of cohorts in a grid cell as functional richness and functional diveregence (using the Rao Index)
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cohortDefinitions">The functional group definitions for cohorts in the model</param>
            <param name="cellIndices">The list of cell indices in the current model simulation</param>
            <param name="cellIndex">The index of the current cell within the list of cells to run</param>
            <returns>A pair of values representing the functional richness and functional divergence (functional richness currently disabled!)</returns>
        </member>
        <member name="P:Madingley.EcosytemMetrics.TrophicIndexBinValues">
            <summary>
            Get and set the trophic level values associated with each of the trophic level bins
            </summary>
        </member>
        <member name="P:Madingley.EcosytemMetrics.NumberTrophicBins">
            <summary>
            Get and set the number of trophic level bins to use in calculating ecosystem-level metrics
            </summary>
        </member>
        <member name="T:Madingley.ExtinctionTracker">
            <summary>
            Tracks results associated with cohort extinction
            </summary>
        </member>
        <member name="M:Madingley.ExtinctionTracker.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Constructor for the eating tracker: sets up output file
            </summary>
            <param name="extinctionFilename">The filename for the output file</param>
            <param name="outputPath">The path to the output directory</param>
            <param name="outputFilesSuffix">The suffix to be applied to all outputs from this model simulation</param>
            <param name="cellIndex">The index of the current cell within the list of cells in this simulation</param>
        </member>
        <member name="M:Madingley.ExtinctionTracker.RecordExtinction(System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Collections.Generic.List{System.UInt32})">
            <summary>
            Record the extinction of a cohort in the output file
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="currentTimeStep">The current model time step</param>
            <param name="merged">Whether the cohort going extinct has ever been merged with another cohort</param>
            <param name="cohortID">The ID of the cohort going extinct</param>
        </member>
        <member name="T:Madingley.GlobalNPPTracker">
            <summary>
            Tracks flows of biomass into plant matter through net primary production
            </summary>
        </member>
        <member name="F:Madingley.GlobalNPPTracker.NPP">
            <summary>
            An array to hold gridded NPP values
            </summary>
        </member>
        <member name="F:Madingley.GlobalNPPTracker.DataConverter">
            <summary>
            An instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="F:Madingley.GlobalNPPTracker.SDSCreator">
            <summary>
            Instance of the class to create SDS objects
            </summary>
        </member>
        <member name="F:Madingley.GlobalNPPTracker.NPPOutput">
            <summary>
            A dataset to store the NPP outputs to file
            </summary>
        </member>
        <member name="M:Madingley.GlobalNPPTracker.#ctor(System.String,System.Int32,System.Int32,System.Single[],System.Single[],System.Single,System.Single,System.Int32)">
            <summary>
            Constructor for the global NPP tracker: sets up the output file and the data arrays
            </summary>
            <param name="outputPath">Path to the file to output NPP data to</param>
            <param name="numLats">The number of cells latitudinally in the NPP output grid</param>
            <param name="numLons">The number of cells longitudinally in the NPP output grid</param>
            <param name="lats">The latitudes of cells in the grid to output</param>
            <param name="lons">The longitudes of cells in the grid to output</param>
            <param name="latCellSize">The latitudinal cell size of the grid to output</param>
            <param name="lonCellSize">The longitudinal cell size of the grid to output</param>
            <param name="numTimeSteps">The number of time steps to output NPP data for</param>
        </member>
        <member name="M:Madingley.GlobalNPPTracker.RecordNPPValue(System.UInt32,System.UInt32,System.Double)">
            <summary>
            Add the NPP value for this grid cell
            </summary>
            <param name="latIndex">The latitude index of the grid cell</param>
            <param name="lonIndex">The longitude index of the grid cell</param>
            <param name="val">The NPP value to be recorded</param>
        </member>
        <member name="M:Madingley.GlobalNPPTracker.StoreNPPGrid(System.UInt32)">
            <summary>
            Add the filled NPP grid the memory dataset ready to be written to file
            </summary>
            <param name="t">The current time step</param>
        </member>
        <member name="M:Madingley.GlobalNPPTracker.CloseNPPFile">
            <summary>
            Close the connection to the file for outputting NPP flows
            </summary>
        </member>
        <member name="T:Madingley.GlobalProcessTracker">
            <summary>
            Tracks ecological processes
            </summary>
        </member>
        <member name="F:Madingley.GlobalProcessTracker._TrackProcesses">
            <summary>
            Whether to track processes
            </summary>
        </member>
        <member name="F:Madingley.GlobalProcessTracker._TrackNPP">
            <summary>
            An instance of the global NPP tracker
            </summary>
        </member>
        <member name="M:Madingley.GlobalProcessTracker.#ctor(System.UInt32,System.Single[],System.Single[],System.Collections.Generic.List{System.UInt32[]},System.Collections.Generic.SortedList{System.String,System.String},System.Boolean,Madingley.FunctionalGroupDefinitions,System.Double,System.String,System.String,Madingley.MassBinsHandler,System.Boolean,Madingley.MadingleyModelInitialisation,System.Single,System.Single)">
            <summary>
            Constructor for process tracker: Initialises the trackers for individual processes
            </summary>
            <param name="numTimesteps">The number of time steps in the model</param>
            <param name="lats">The latitudes of active grid cells in the model</param>
            <param name="lons">The longitudes of active grid cells in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="Filenames">The filenames of the output files to write the tracking results to</param>
            <param name="trackProcesses">Whether to track processes</param>
            <param name="cohortDefinitions">The definitions for cohort functional groups in the model</param>
            <param name="missingValue">The missing value to use in process tracking output files</param>
            <param name="outputFileSuffix">The suffix to be applied to output files from process tracking</param>
            <param name="outputPath">The path to the folder to be used for process tracking outputs</param>
            <param name="trackerMassBins">The mass bins to use for categorising output data in the process trackers</param>
            <param name="specificLocations">Whether the model is being run for specific locations</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="latCellSize">The size of grid cells latitudinally</param>
            <param name="lonCellSize">The size of grid cells longitudinally</param>
        </member>
        <member name="M:Madingley.GlobalProcessTracker.RecordNPP(System.UInt32,System.UInt32,System.Double)">
            <summary>
            Record a flow of biomass to plants through net primary production
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="val">The NPP value</param>
        </member>
        <member name="M:Madingley.GlobalProcessTracker.StoreNPPGrid(System.UInt32)">
            <summary>
            Write out the NPP-tracking data to file
            </summary>
            <param name="t">The current time step</param>
        </member>
        <member name="M:Madingley.GlobalProcessTracker.CloseNPPFile">
            <summary>
            Close the connection to the file for outputting NPP data
            </summary>
        </member>
        <member name="P:Madingley.GlobalProcessTracker.TrackProcesses">
            <summary>
            Get or set whether to track processes
            </summary>
        </member>
        <member name="P:Madingley.GlobalProcessTracker.TrackNPP">
            <summary>
            Get and set the instance of the global NPP tracker
            </summary>
        </member>
        <member name="T:Madingley.GrowthTracker">
            <summary>
            Track the growth of a cohort in a time step
            </summary>
        </member>
        <member name="F:Madingley.GrowthTracker.GrowthFilename">
            <summary>
            File to write data on growth to
            </summary>
        </member>
        <member name="F:Madingley.GrowthTracker.GrowthWriter">
            <summary>
            A streamwriter for writing out data on growth
            </summary>
        </member>
        <member name="M:Madingley.GrowthTracker.#ctor(System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.List{System.UInt32[]},System.String,System.String,System.String,System.Int32)">
            <summary>
            Set up the tracker for outputing the growth of cohorts each time step
            </summary>
            <param name="numTimeSteps">The total number of timesteps for this simulation</param>
            <param name="numLats">The number of latitudes in the model grid</param>
            <param name="numLons">The number of longitudes in the model grid</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="growthFilename">The name of the file to write information about growth to</param>
            <param name="outputFilesSuffix">The suffix to apply to output files from this simulation</param>
            <param name="outputPath">The file path to write all outputs to</param>
            <param name="cellIndex">The index of the current cell in the list of all cells in this simulation</param>
        </member>
        <member name="M:Madingley.GrowthTracker.RecordGrowth(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Record the growth of the individuals in a cohort in the current time step
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="timeStep">The current time step</param>
            <param name="currentBodyMass">The current body mass of individuals in the cohort</param>
            <param name="functionalGroup">The index of the functional group that the cohort belongs to</param>
            <param name="netGrowth">The net growth of individuals in the cohort this time step</param>
            <param name="metabolism">The biomass lost by individuals in this cohort through metabolism</param>
            <param name="predation">The biomass gained by individuals in this cohort through predation</param>
            <param name="herbivory">The biomass gained by individuals in this cohort through herbivory</param>
        </member>
        <member name="M:Madingley.GrowthTracker.CloseStreams">
            <summary>
            Closes streams for writing growth data
            </summary>
        </member>
        <member name="T:Madingley.Output.MadingleyModelOutput">
            <summary>
            The ecosystem model
            </summary>
        </member>
        <member name="T:Madingley.MassBinsHandler">
            <summary>
            Handles the mass bins to be used in model outputs
            </summary>
        </member>
        <member name="F:Madingley.MassBinsHandler.NumMassBins">
            <summary>
            The number of mass bins to be used for outputs
            </summary>
        </member>
        <member name="F:Madingley.MassBinsHandler.MassBins">
            <summary>
            A vector containing the masses correpsonding to the mass bins
            </summary>
        </member>
        <member name="M:Madingley.MassBinsHandler.SetUpMassBins(System.String,System.String)">
            <summary>
            Sets up mass bins based on an input file
            </summary>
            <param name="massBinsFile">The filename containing the mass bin information</param>
            <param name="inputPath">The path to the folder which contains the mass bins definition file</param>
        </member>
        <member name="M:Madingley.MassBinsHandler.GetSpecifiedMassBins">
            <summary>
            Returns the mass bins copied from file
            </summary>
            <returns>the mass bins copied from file</returns>
        </member>
        <member name="T:Madingley.MadingleyModelInitialisation">
            <summary>
            Initialization information for Madingley model simulations
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._GlobalModelTimeStepUnit">
            <summary>
            String identifying time step units to be used by the simulations
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._NumTimeSteps">
            <summary>
            The number of time steps to be run in the simulations
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._BurninTimeSteps">
            <summary>
            The number of time steps to run the model for before any impacts are applied
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._ImpactTimeSteps">
            <summary>
            For scenarios with temporary impacts, the number of time steps to apply the impact for
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._RecoveryTimeSteps">
            <summary>
            For scenarios with temporary impacts, the number of time steps to apply the impact for
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._InstantaneousTimeStep">
            <summary>
            For scenarios with instantaneous impacts, the time step in which to apply the impact
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._NumInstantaneousTimeStep">
            <summary>
            For scenarios with instantaneous impacts, the number of time steps to apply the impact for
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._CellSize">
            <summary>
            The size of cells to be used in the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._BottomLatitude">
            <summary>
            The lowest extent of the model grid in degrees
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._TopLatitude">
            <summary>
            The uppermost extent of the model grid in degrees
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._LeftmostLongitude">
            <summary>
            The leftmost extent of the model grid in degrees
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._RightmostLongitude">
            <summary>
            The rightmost extent of the model grid in degrees
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._CellRarefaction">
            <summary>
            The rarefaction of active cells in the model grid
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._RunInParallel">
            <summary>
            Whether to run the model for different grid cells in parallel
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._RunCellsInParallel">
            <summary>
            Whether to run the model for different grid cells in parallel
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._RunSimulationsInParallel">
            <summary>
            Whether to run the model for different simulations in parallel
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._RunRealm">
            <summary>
            Which realm to run the model for
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._DrawRandomly">
            <summary>
            Whether to draw cohort properties randomly when seeding them, and whether cohorts will undergo ecological processes in a random order
            </summary>
            <remarks>Value should be set in initialization file, but default value is true</remarks>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._ExtinctionThreshold">
            <summary>
            The threshold abundance below which cohorts will be made extinct
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._MergeDifference">
            <summary>
            The threshold difference between cohorts, within which they will be merged
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._MaxNumberOfCohorts">
            <summary>
            The maximum number of cohorts to be in the model, per grid cell, when it is running
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._DispersalOnly">
            <summary>
            Whether to run only dispersal (i.e. turn all other ecological processes off, and set dispersal probability to one temporarily)
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._PlanktonDispersalThreshold">
            <summary>
            The weight threshold (grams) below which marine organisms that are not obligate zooplankton will be dispersed planktonically
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._InitialisationFileStrings">
            <summary>
            Information from the initialization file
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._CohortFunctionalGroupDefinitions">
            <summary>
            The functional group definitions of cohorts in the model
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._StockFunctionalGroupDefinitions">
            <summary>
            The functional group definitions of stocks in the model
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._OutputPath">
            <summary>
            The full path for the output files for a set of simulations
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._TrackProcesses">
            <summary>
            Whether to output detailed diagnostics for the ecological processes
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._TrackCrossCellProcesses">
            <summary>
            Whether to output detailed diagnostics for the cross cell ecological processes
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._TrackGlobalProcesses">
            <summary>
            Whether to output detailed diagnostics for the ecological processes
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._ProcessTrackingOutputs">
            <summary>
            The paths and filenames for the diagnostics for the ecological processes
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._Units">
            <summary>
            The string values for the units of each environmental data layer
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._ModelMassBins">
            <summary>
            An instance of the mass bin handler for the current model run
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._LiveOutputs">
            <summary>
            Whether to display live outputs using Dataset Viewer during the model runs
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._TrackMarineSpecifics">
            <summary>
            Whether or not to track trophic level biomass and flow information specific to the marine realm
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._OutputMetrics">
            <summary>
            Whether to output ecosystem-level functional metrics
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._ImpactCellIndices">
            <summary>
            The index of the cell, within the list of cells to run, to apply impact scenarios on
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation.Utilities">
            <summary>
            Instance of Utilities for timestep conversions
            </summary>
        </member>
        <member name="F:Madingley.MadingleyModelInitialisation._ModelStates">
            <summary>
            Reads in and holds the state of the model as specified in the input file
            </summary>
        </member>
        <member name="M:Madingley.MadingleyModelInitialisation.#ctor(System.String,System.String)">
            <summary>
            Reads the initalization file to get information for the set of simulations to be run
            </summary>
            <param name="initialisationFile">The name of the initialization file with information on the simulations to be run</param>
            <param name="outputPath">The path to folder in which outputs will be stored</param>
        </member>
        <member name="M:Madingley.MadingleyModelInitialisation.ReadAndCopyInitialisationFiles(System.String,System.String)">
            <summary>
            Reads in all initialisation files and copies them to the output directory for future reference
            </summary>
            <param name="initialisationFileName">The name of the initialization file with information on the simulations to be run</param>
            <param name="inputPath">The path to folder which contains the inputs</param>
            <todo>Need to adjust this file to deal with incorrect inputs, extra columns etc by throwing an error</todo>
            <todo>Also need to strip leading spaces</todo>
        </member>
        <member name="M:Madingley.MadingleyModelInitialisation.ReadModelState(System.String,System.String)">
            <summary>
            Reads in and holds a model state from file
            </summary>
            <param name="modelStateFileSpecification">Filename of the setup file specifying the model state datafile</param>
        </member>
        <member name="M:Madingley.MadingleyModelInitialisation.CopyParameterValues(System.String)">
            <summary>
            Copy parameter values to a text file in the specified output directory
            </summary>
            <param name="outputDirectory">THe directory for outputs</param>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.GlobalModelTimeStepUnit">
            <summary>
            Get and set the string identifying time step units to be used by the simulations
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.NumTimeSteps">
            <summary>
            Get and set the number of time steps to be run in the simulations
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.BurninTimeSteps">
            <summary>
            Get and set the number of time steps to run the model for before any impacts are applied
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.ImpactTimeSteps">
            <summary>
            Get and set the number of time steps to apply the impact for, for scenarios with temporary impacts
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.RecoveryTimeSteps">
            <summary>
            Get and set the number of time steps to apply the impact for, for scenarios with temporary impacts
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.InstantaneousTimeStep">
            <summary>
            Get and set the time step in which to apply the impact, for scenarios with instantaneous impacts
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.NumInstantaneousTimeStep">
            <summary>
            Get and set the number of time steps to apply the impact for, for scenarios with instantaneous impacts
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.CellSize">
            <summary>
            Get and set the size of cells to be used in the model grid
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.BottomLatitude">
            <summary>
            Get and set the lowest extent of the model grid in degrees
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.TopLatitude">
            <summary>
            Get and set the uppermost extent of the model grid in degrees
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.LeftmostLongitude">
            <summary>
            Get and set the leftmost extent of the model grid in degrees
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.RightmostLongitude">
            <summary>
            Get and set the rightmost extent of the model grid in degrees
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.CellRarefaction">
            <summary>
            Get and set the rarefaction of active cells in the model grid
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.RunInParallel">
            <summary>
            Get and set whether to run the model for different grid cells in parallel
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.RunCellsInParallel">
            <summary>
            Get and set whether to run the model for different grid cells in parallel
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.RunSimulationsInParallel">
            <summary>
            Get and set whether to run the model for different grid cells in parallel
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.RunRealm">
            <summary>
            Get and set which realm to run the model for
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.DrawRandomly">
            <summary>
            Get and set whether to draw cohort properties randomly when seeding them, and whether cohorts will undergo ecological processes in a random order
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.ExtinctionThreshold">
            <summary>
            Get and set the threshold abundance below which cohorts will be made extinct
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.MergeDifference">
            <summary>
            Get and set the threshold difference between cohorts, within which they will be merged
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.MaxNumberOfCohorts">
            <summary>
             Get and set the maximum number of cohorts per grid cell
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.DispersalOnly">
            <summary>
            Get and set whether to run dispersal only
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.PlanktonDispersalThreshold">
            <summary>
            Get and set the weight threshold (grams) below which marine organisms that are not obligate zooplankton will be dispersed planktonically
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.InitialisationFileStrings">
            <summary>
            Get and set information from the initialization file
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.CohortFunctionalGroupDefinitions">
            <summary>
            Get and set the functional group definitions of cohorts in the model
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.StockFunctionalGroupDefinitions">
            <summary>
            Get and set the functional group definitions of stocks in the model
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.OutputPath">
            <summary>
            Get and set the full path for the output files for a set of simulations
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.TrackProcesses">
            <summary>
            Get and set whether to output detailed diagnostics for the ecological processes
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.TrackCrossCellProcesses">
            <summary>
            Get and set whether to output detailed diagnostics for the cross cell ecological processes
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.TrackGlobalProcesses">
            <summary>
            Get and set whether to output detailed diagnostics for the ecological processes
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.ProcessTrackingOutputs">
            <summary>
            Get and set the paths and filenames for the diagnostics for the ecological processes
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.Units">
            <summary>
            Get and set the unit strings
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.ModelMassBins">
            <summary>
            Get the instance of the mass bin handler for the current model run
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.LiveOutputs">
            <summary>
            Get and set whether to display live outputs using Dataset Viewer during the model runs
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.TrackMarineSpecifics">
            <summary>
            Get and set whether or not to track trophic level biomass and flow information specific to the marine realm
            </summary>
        </member>
        <member name="P:Madingley.MadingleyModelInitialisation.OutputMetrics">
            <summary>
            Get and set whether to output ecosystem-level functional metrics
            </summary>
        </member>
        <member name="T:Madingley.MetabolismTracker">
            <summary>
            Tracks variables associated with cohort metabolism
            </summary>
        </member>
        <member name="F:Madingley.MetabolismTracker.MetabolismFilename">
            <summary>
            File to write metabolism data to
            </summary>
        </member>
        <member name="F:Madingley.MetabolismTracker.MetabolismWriter">
            <summary>
            A streamwriter to write out data on metabolism
            </summary>
        </member>
        <member name="M:Madingley.MetabolismTracker.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Set up the metabolism tracker
            </summary>
            <param name="metabolismFilename">Name of the metabolism tracker file to write to</param>
            <param name="outputPath">The path to the folder in which the metabolism tracker data file will be stored</param>
            <param name="outputFilesSuffix">A suffix for the filename in the case that there is more than one scenario</param>
            <param name="cellIndex">The index of the current cell within the list of all cells in this simulation</param>
        </member>
        <member name="M:Madingley.MetabolismTracker.RecordMetabolism(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Record the metabolic loss of individuals in a cohort
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="timeStep">The current time step</param>
            <param name="currentBodyMass">The current body mass of individuals in the cohort</param>
            <param name="functionalGroup">The index of the functional group that the cohort belongs to</param>
            <param name="temperature">The ambient temperature this cohort is experiencing</param>
            <param name="metabolicLoss">The metabolic loss of this cohort in this time step</param>
        </member>
        <member name="M:Madingley.MetabolismTracker.CloseStreams">
            <summary>
            Closes streams for writing metabolism data
            </summary>
        </member>
        <member name="T:Madingley.MortalityTracker">
            <summary>
            Track results associated with mortality
            </summary>
        </member>
        <member name="F:Madingley.MortalityTracker.MortalityFilename">
            <summary>
            Name of the file to write data on mortality to
            </summary>
        </member>
        <member name="F:Madingley.MortalityTracker.MortalityWriter">
            <summary>
            A streamwriter instance to output data on mortality
            </summary>
        </member>
        <member name="F:Madingley.MortalityTracker.SyncMortalityWriter">
            <summary>
            Synchronized version of the streamwriter to output mortality data
            </summary>
        </member>
        <member name="F:Madingley.MortalityTracker.MortalityList">
            <summary>
            List of mortality events for each cohort (keyed by cohort ID)
            </summary>
        </member>
        <member name="F:Madingley.MortalityTracker.RandomNumberGenerator">
            <summary>
            An instance of the simple random number generator
            </summary>
        </member>
        <member name="M:Madingley.MortalityTracker.#ctor(System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.List{System.UInt32[]},System.String,System.String,System.String,System.Int32)">
            <summary>
            Set up properties of the mortality tracker
            </summary>
            <param name="numTimeSteps">The total number of time steps for this simulation</param>
            <param name="numLats">The number of latitudinal cells in the model grid</param>
            <param name="numLons">The number of longitudinal cells in the model grid</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="mortalityFilename">The filename to write data on mortality to</param>
            <param name="outputFileSuffix">The suffix to apply to all output files from this model run</param>
            <param name="outputPath">The path to write all output files to</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
        </member>
        <member name="M:Madingley.MortalityTracker.RecordMortality(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.UInt32,System.UInt32,System.Double,System.String)">
            <summary>
            Record a mortality event associated with a cohort to memory
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="birthStep">The time step that the cohort came into existence</param>
            <param name="timestep">The current time step</param>
            <param name="currentMass">The current body mass of individuals in the cohort with dying individuals</param>
            <param name="adultMass">The adult body mass of individuals in the cohort with dying individuals</param>
            <param name="functionalGroup">The index of the functional group that the cohort belongs to</param>
            <param name="cohortID">The unique ID of the cohort</param>
            <param name="numberDied">The number of individuals </param>
            <param name="mortalitySource"></param>
        </member>
        <member name="M:Madingley.MortalityTracker.OutputMortalityProfile(System.UInt32)">
            <summary>
            Output the mortality profile of a cohort becoming extinct
            </summary>
            <param name="cohortID">The ID of the cohort becoming extinct</param>
        </member>
        <member name="T:Madingley.OutputCell">
            <summary>
            A class to perform all operations involved in outputting the results to console, screen or file
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.ModelOutputDetail">
            <summary>
            An instance of the enumerator to designate output detail level
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.DataSetToViewLive">
            <summary>
            A dataset to store the live screen view
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.BasicOutputMemory">
            <summary>
            A version of the basic outputs dataset to hold data for output in memory while running the model
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.MassBinsOutputMemory">
            <summary>
            A memory version of the mass bins output to store data during the model run
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TrackedCohortsOutputMemory">
            <summary>
            A memory version of the tracked cohorts output to hold data during the model run
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.CohortTraitIndices">
            <summary>
            Holds a list of the functional group indices correpsonding to each unique cohort trait
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.CohortTraitIndicesMarine">
            <summary>
            Holds a list of the functional group indices correpsonding to each unique cohort trait in the marine realm
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.StockTraitIndices">
            <summary>
            Holds a list of the functional group indices corresponding to each unique stock trait
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.StockTraitIndicesMarine">
            <summary>
            Holds a list of the functional group indices corresponding to each unique stock trait
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TotalLivingBiomass">
            <summary>
            The total living biomass in the model
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TotalIncomingNPP">
            <summary>
            Total NPP incoming from the marine model
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TotalDensitiesOut">
            <summary>
            Total densities of all cohorts within each combination of cohort traits
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TotalDensitiesMarineOut">
            <summary>
            Total densities of all cohorts within each combination of cohort traits (marine)
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TotalBiomassDensitiesOut">
            <summary>
            Total biomass densities of all cohorts within each combination of cohort traits
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TotalBiomassDensitiesMarineOut">
            <summary>
            Total biomass densities of all cohorts within each combination of cohort traits
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.AbundancesInMassBins">
            <summary>
            List of vectors of abundances in mass bins corresponding with each unique trait value
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.BiomassesInMassBins">
            <summary>
            List of vectors of biomasses in mass bins corresponding with each unique trait value
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.AbundancesInJuvenileAdultMassBins">
            <summary>
            List of arrays of abundance in juvenile vs. adult mass bins correpsonding with each unique trait value
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.BiomassesInJuvenileAdultMassBins">
            <summary>
            List of arrays of biomass in juvenile vs. adult mass bins correpsonding with each unique trait value
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.MassBinNumber">
            <summary>
            The number of mass bins to use in model outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.MassBins">
            <summary>
            The mass bins to use in model outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell._MassBinHandler">
            <summary>
            The mass bin handler for the mass bins to use in the model output
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.MaximumYValue">
            <summary>
            The upper limit for the y-axis of the live output
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TimeSteps">
            <summary>
            The time steps in this model simulation
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TrackedCohorts">
            <summary>
            List to hold cohort IDs of tracked cohorts
            </summary>
        </member>
        <member name="F:Madingley.OutputCell._OutputPath">
            <summary>
            The path to the output folder
            </summary>
        </member>
        <member name="F:Madingley.OutputCell._OutputSuffix">
            <summary>
            The suffix to apply to all outputs from this grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.CohortTraits">
            <summary>
            The cohort traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.CohortTraitValues">
            <summary>
            All unique values of the traits to be considered in outputs (terrestrial only)
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.CohortTraitValuesMarine">
            <summary>
            All unique values of the traits to be considered in marine outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.StockTraits">
            <summary>
            The stock traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.StockTraitsMarine">
            <summary>
            The marine stock traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.StockTraitValues">
            <summary>
            All unique values of the traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.StockTraitValuesMarine">
            <summary>
            All unique values of the traits to be considered in the marine outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TrackedCohortIndividualMasses">
            <summary>
            Vector of individual body masses of the tracked cohorts
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TrackedCohortAbundances">
            <summary>
            Vector of abundances of the tracked cohorts
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.DataConverter">
            <summary>
            Instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.SDSCreator">
            <summary>
            Intance of the class to create SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.GridViewer">
            <summary>
            An instance of the class to view grid results
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.LiveOutputs">
            <summary>
            Whether to display live outputs during the model run
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.TrackMarineSpecifics">
            <summary>
             Track marine specific functional groups (i.e. plankton, baleen whales)
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.PlanktonSizeThreshold">
            <summary>
            The size threshold for determining whether an organism is planktonic
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.OutputMetrics">
            <summary>
            Indicates whether to output metric information
            </summary>
        </member>
        <member name="F:Madingley.OutputCell.Metrics">
            <summary>
            Instance of the class to calculate ecosystem metrics
            </summary>
        </member>
        <member name="M:Madingley.OutputCell.#ctor(System.String,Madingley.MadingleyModelInitialisation,System.Int32)">
            <summary>
            Constructor for the cell output class
            </summary>
            <param name="outputDetail">The level of detail to include in the ouputs: 'low', 'medium' or 'high'</param>
            <param name="modelInitialisation">Model initialisation object</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
        </member>
        <member name="M:Madingley.OutputCell.SpawnDatasetViewer(System.UInt32)">
            <summary>
            Spawn dataset viewer for the live outputs
            </summary>
            <param name="NumTimeSteps">The number of time steps in the model run</param>
        </member>
        <member name="M:Madingley.OutputCell.SetUpOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.UInt32,System.String,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Boolean)">
            <summary>
            Set up all outputs (live, console and file) prior to the model run
            </summary>
            <param name="ecosystemModelGrid">The model grid that output data will be derived from</param>
            <param name="cohortFunctionalGroupDefinitions">The definitions for cohort functional groups</param>
            <param name="stockFunctionalGroupDefinitions">The definitions for stock functional groups</param>
            <param name="numTimeSteps">The number of time steps in the model run</param>
            <param name="outputFilesSuffix">The suffix to be applied to all output files from the current model run</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellIndex">The number of the current grid cell in the list of indices of active cells</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.InitialiseTraitBasedOutputs(Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Boolean)">
            <summary>
            Set up the necessary architecture for generating outputs arranged by trait value
            </summary>
            <param name="cohortFunctionalGroupDefinitions">Functional group definitions for cohorts in the model</param>
            <param name="stockFunctionalGroupDefinitions">Functional group definitions for stocks in the model</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.SetUpLowLevelOutputs(System.UInt32,Madingley.ModelGrid)">
            <summary>
            Sets up the outputs associated with all levels of output detail
            </summary>
            <param name="numTimeSteps">The number of time steps in the model run</param>
            <param name="ecosystemModelGrid">The model grid</param>
        </member>
        <member name="M:Madingley.OutputCell.SetupMediumLevelOutputs(Madingley.ModelGrid,System.Boolean)">
            <summary>
            Sets up the outputs associated with medium and high levels of output detail
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.SetUpHighLevelOutputs(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32,Madingley.FunctionalGroupDefinitions,System.Boolean)">
            <summary>
            Sets up the outputs associated with the high level of output detail
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The indices of active cells in the model grid</param>
            <param name="cellNumber">The index of the current cell in the list of active cells</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions for cohorts in the model</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.CalculateOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Collections.Generic.SortedList{System.String,System.Double},Madingley.MadingleyModelInitialisation,System.UInt32,System.Boolean)">
            <summary>
            Calculates the variables to output
            </summary>
            <param name="ecosystemModelGrid">The model grid to get output data from</param>
            <param name="cohortFunctionalGroupDefinitions">Definitions of the cohort functional groups in the model</param>
            <param name="stockFunctionalGroupDefinitions">Definitions of the stock functional groups in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellNumber">The number of the current cell in the list of indices of active cells</param>
            <param name="globalDiagnosticVariables">The sorted list of global diagnostic variables in the model</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="month">The current month in the model run</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.CalculateLowLevelOutputs(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Collections.Generic.SortedList{System.String,System.Double},Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,Madingley.MadingleyModelInitialisation,System.UInt32,System.Boolean)">
            <summary>
            Calculate outputs associated with low-level outputs
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of indices of active cells in the model grid</param>
            <param name="cellIndex">The position of the current cell in the list of active cells</param>
            <param name="globalDiagnosticVariables">The global diagnostic variables for this model run</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="stockFunctionalGroupDefinitions">The functional group definitions of stocks in the model</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="month">The current month in the model run</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.CalculateHighLevelOutputs(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Boolean)">
            <summary>
            Calculate outputs associated with high-level outputs
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellIndex">The number of the current cell in the list of active cells</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.InitialOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Collections.Generic.SortedList{System.String,System.Double},System.UInt32,Madingley.MadingleyModelInitialisation,System.UInt32,System.Boolean)">
            <summary>
            Write to the output file values of the output variables before the first time step
            </summary>
            <param name="ecosystemModelGrid">The model grid to get data from</param>C:\madingley-ecosystem-model\Madingley\Output and tracking\PredationTracker.cs
            <param name="cohortFunctionalGroupDefinitions">The definitions of cohort functional groups in the model</param>
            <param name="stockFunctionalGroupDefinitions">The definitions of stock functional groups in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellNumber">The number of the current cell in the list of indices of active cells</param>
            <param name="globalDiagnosticVariables">List of global diagnostic variables</param>
            <param name="numTimeSteps">The number of time steps in the model run</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="month">The current month in the model run</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.InitialLiveOutputs(Madingley.ModelGrid,System.Boolean)">
            <summary>
            Generates the intial output to the live dataset view
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.InitialFileOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,System.Boolean,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Generates the initial file outputs
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions for cohorts in the model</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
            <param name="cellIndices">The list of all cells to run the model for</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
        </member>
        <member name="M:Madingley.OutputCell.TimeStepOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Collections.Generic.SortedList{System.String,System.Double},Timing.StopWatch,System.UInt32,System.UInt32,Madingley.MadingleyModelInitialisation,System.UInt32,System.Boolean)">
            <summary>
            Write to the output file values of the output variables during the model time steps
            </summary>
            <param name="ecosystemModelGrid">The model grid to get data from</param>
            <param name="cohortFunctionalGroupDefinitions">The definitions of the cohort functional groups in the model</param>
            <param name="stockFunctionalGroupDefinitions">The definitions of the stock  functional groups in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellNumber">The number of the current cell in the list of indices of active cells</param>
            <param name="globalDiagnosticVariables">List of global diagnostic variables</param>
            <param name="timeStepTimer">The timer for the current time step</param>
            <param name="numTimeSteps">The number of time steps in the model run</param>
            <param name="currentTimestep">The current model time step</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="month">The current month in the model run</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.TimeStepLiveOutputs(System.UInt32,System.UInt32,Madingley.ModelGrid,System.Boolean)">
            <summary>
            Generate the live outputs for the current time step
            </summary>
            <param name="numTimeSteps">The number of time steps in the model run</param>
            <param name="currentTimeStep">The current time step</param>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.TimeStepConsoleOutputs(System.UInt32,Timing.StopWatch)">
            <summary>
            Generates the console outputs for the current time step
            </summary>
            <param name="currentTimeStep">The current time step</param>
            <param name="timeStepTimer">The timer for the current time step</param>
        </member>
        <member name="M:Madingley.OutputCell.TimeStepFileOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,System.UInt32,System.Boolean,System.Collections.Generic.List{System.UInt32[]},System.Int32)">
            <summary>
            Generate file outputs for the current time step
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions for cohorts in the model</param>
            <param name="currentTimeStep">The current time step</param>
            <param name="MarineCell">Whether the current cell is a marine cell</param>
            <param name="cellIndices">The list of all cells to run the model for</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
        </member>
        <member name="M:Madingley.OutputCell.FinalOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Collections.Generic.SortedList{System.String,System.Double},Madingley.MadingleyModelInitialisation,System.UInt32,System.Boolean)">
            <summary>
            Write to the output file values of the output variables at the end of the model run
            </summary>
            <param name="EcosystemModelGrid">The model grid to get data from</param>
            <param name="CohortFunctionalGroupDefinitions">Definitions of the cohort functional groups in the model</param>
            <param name="StockFunctionalGroupDefinitions">Definitions of the stock functional groups in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellNumber">The number of the current cell in the list of indices of active cells</param>
            <param name="GlobalDiagnosticVariables">List of global diagnostic variables</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="month">The current month in the model run</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.CalculateMassBinOutputs(Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Int32,System.Boolean)">
            <summary>
            Calculates the abundances and biomasses within mass bins for all functional groups in the cohort indices array
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="cellIndex">The number of the current cell in the list of indices of active cells</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.OutputCell.CalculateAllCombinations(System.String[],System.String[])">
            <summary>
            Returns an array of strings for all unique combinations of the strings where strings from R1 vector appear in the first column.
            </summary>
            <param name="R1"></param>
            <param name="R2"></param>
            <returns>Vector of vector of string combinations</returns>
        </member>
        <member name="M:Madingley.OutputCell.CalculateAllCombinations(System.String[],System.String[],System.String[])">
            <summary>
            Overloaded method that returns an array of strings for all unique combinations of the strings where strings from R1 vector appear in the first column.
            </summary>
            <param name="R1"></param>
            <param name="R2"></param>
            <param name="R3"></param>
            <returns>Vector of vector of string combinations</returns>
        </member>
        <member name="P:Madingley.OutputCell.OutputPath">
            <summary>
            Get the path to the output folder
            </summary>
        </member>
        <member name="P:Madingley.OutputCell.OutputSuffix">
            <summary>
            Get the suffix for ouputs for this grid cell
            </summary>
        </member>
        <member name="T:Madingley.OutputCell.OutputDetailLevel">
            <summary>
            Designates the level of output detail
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.ModelOutputDetail">
            <summary>
            An instance of the enumerator to designate output detail level
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.BasicOutput">
            <summary>
            A dataset to store the basic outputs to file
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.TimeSteps">
            <summary>
            The time steps in this model simulation
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal._OutputPath">
            <summary>
            The path to the output folder
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal._OutputSuffix">
            <summary>
            The suffix to apply to all outputs from this grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.TotalAbundance">
            <summary>
            The total abundance across all cohorts in the grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.TotalLivingBiomass">
            <summary>
            The total living biomass of all cohorts and stock in the grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.TotalBiomass">
            <summary>
            The total biomass, living and non-living in the grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.OrganicPoolOut">
            <summary>
            The total biomass in the organic pool
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.RespiratoryPoolOut">
            <summary>
            The total biomass in the respiratory pool
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.TotalNumberOfCohorts">
            <summary>
            Total number of cohorts in the grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.TotalNumberOfStocks">
            <summary>
            Total number of stocks in the grid cell
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.NumberOfCohortsExtinct">
            <summary>
            Number of cohorts that became extinct in a time step
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.NumberOfCohortsProduced">
            <summary>
            Number of cohorts produced in a time step
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.NumberOfCohortsCombined">
            <summary>
            Number of cohorts merged in a time step
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.DataConverter">
            <summary>
            An instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputGlobal.SDSCreator">
            <summary>
            Instance of the class to create SDS objects
            </summary>
        </member>
        <member name="M:Madingley.OutputGlobal.#ctor(System.String,Madingley.MadingleyModelInitialisation)">
            <summary>
            Constructor for the global output class
            </summary>
            <param name="outputDetail">The level of detail to be used in model outputs</param>
            <param name="modelInitialisation">Model intialisation object</param>
        </member>
        <member name="M:Madingley.OutputGlobal.SetupOutputs(System.UInt32,Madingley.ModelGrid,System.String)">
            <summary>
            Set up all outputs (live, console and file) prior to the model run
            </summary>
            <param name="numTimeSteps">The number of time steps in the model run</param>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="outputFilesSuffix">The suffix to be applied to all output files</param>
        </member>
        <member name="M:Madingley.OutputGlobal.CalculateOutputs(Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,Madingley.ModelGrid,System.Collections.Generic.List{System.UInt32[]},System.Collections.Generic.SortedList{System.String,System.Double},Madingley.MadingleyModelInitialisation)">
            <summary>
            Calculates the variables to output
            </summary>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="stockFunctionalGroupDefinitions">The functional group definitions of stocks in the model</param>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cellIndices">The list of indices of active cells in the model grid</param>
            <param name="globalDiagnosticVariables">Global diagnostic variables</param>
            <param name="initialisation">The Madingley Model initialisation</param>
        </member>
        <member name="M:Madingley.OutputGlobal.InitialOutputs(Madingley.ModelGrid,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Collections.Generic.SortedList{System.String,System.Double},Madingley.MadingleyModelInitialisation)">
            <summary>
            Generates the initial model outputs before the first time step
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="stockFunctionalGroupDefinitions">The functional group definitions of stocks in the model</param>
            <param name="cellIndices">The list of indices of active cells in the model grid</param>
            <param name="globalDiagnosticVariables">A list of global diagnostic variables</param>
            <param name="initialisation">The Madingley Model initialisation</param>
        </member>
        <member name="M:Madingley.OutputGlobal.InitialConsoleOutputs">
            <summary>
            Generates the initial console outputs
            </summary>
        </member>
        <member name="M:Madingley.OutputGlobal.InitialFileOutptus(Madingley.ModelGrid)">
            <summary>
            Generates the initial file outputs
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
        </member>
        <member name="M:Madingley.OutputGlobal.TimeStepOutputs(Madingley.ModelGrid,System.UInt32,System.UInt32,Timing.StopWatch,Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions,System.Collections.Generic.List{System.UInt32[]},System.Collections.Generic.SortedList{System.String,System.Double},Madingley.MadingleyModelInitialisation)">
            <summary>
            Generates the outputs for the current time step
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="currentTimeStep">The current model time step</param>
            <param name="currentMonth">The current month in the model run</param>
            <param name="timeStepTimer">The timer for the current time step</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="stockFunctionalGroupDefinitions">The functional group definitions of stocks in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="globalDiagnosticVariables">The global diagnostic variables for the model run</param>
            <param name="initialisation">The Madingley Model initialisation</param>
        </member>
        <member name="M:Madingley.OutputGlobal.TimeStepConsoleOutputs(System.UInt32,System.UInt32,Timing.StopWatch)">
            <summary>
            Generates the console outputs for the current time step
            </summary>
            <param name="currentTimeStep">The current model time step</param>
            <param name="currentMonth">The current month in the model run</param>
            <param name="timeStepTimer">The timer for the current time step</param>
        </member>
        <member name="M:Madingley.OutputGlobal.TimeStepFileOutputs(Madingley.ModelGrid,System.UInt32)">
            <summary>
            Generates the file outputs for the current time step
            </summary>
            <param name="ecosystemModelGrid">The model grid</param>
            <param name="currentTimeStep">The current model time step</param>
        </member>
        <member name="M:Madingley.OutputGlobal.FinalOutputs">
            <summary>
             Write to the output file values of the output variables at the end of the model run
            </summary>
        </member>
        <member name="P:Madingley.OutputGlobal.OutputPath">
            <summary>
            Get the path to the output folder
            </summary>
        </member>
        <member name="P:Madingley.OutputGlobal.OutputSuffix">
            <summary>
            Get the suffix for ouputs for this grid cell
            </summary>
        </member>
        <member name="T:Madingley.OutputGlobal.OutputDetailLevel">
            <summary>
            Designates the level of output detail
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.ModelOutputDetail">
            <summary>
            An instance of the enumerator to designate output detail level
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.DataSetToViewLive">
            <summary>
            A dataset to store the live screen view
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid._OutputPath">
            <summary>
            The path to the output folder
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.GridOutput">
            <summary>
            Dataset object to handle grid-based outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.CohortTraits">
            <summary>
            The cohort traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.CohortTraitValues">
            <summary>
            All unique values of the traits to be considered in outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.StockTraits">
            <summary>
            The stock traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.StockTraitValues">
            <summary>
            All unique values of the traits to be considered in the outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.CohortTraitIndices">
            <summary>
            Holds a list of the functional group indices correpsonding to each unique cohort trait
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.StockTraitIndices">
            <summary>
            Holds a list of the functional group indices corresponding to each unique stock trait
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.LogBiomassDensityGridCohorts">
            <summary>
            Grid of (log) total biomass densities of cohorts in individual grid cells
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.LogBiomassDensityGridStocks">
            <summary>
            Grid of (log) total biomass densities of stocks in individual grid cells
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.LogBiomassDensityGrid">
            <summary>
            Grid of (log) total biomass densities of both stocks and cohorts in individual grid cells
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.LogAbundanceDensityGridCohorts">
            <summary>
            Grod of (log) abundance densities of cohorts in individual grid cells
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.BiomassDensityGrid">
            <summary>
            Grids of total biomass densities in individual grid cells, arranged by trait value
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.AbundanceDensityGrid">
            <summary>
            Grids of total densities in individual grid cells, arranged by trait value
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.MetricsGrid">
            <summary>
            Grids of ecosystem metric values in individual grid cells, arranged by metric name
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.TimeSteps">
            <summary>
            The time steps in this model simulation
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.DataConverter">
            <summary>
            An instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.SDSCreator">
            <summary>
            Instance of the class to create SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.GridViewer">
            <summary>
            An instance of the class for viewing grid results
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.LiveOutputs">
            <summary>
            Whether to display live outputs during this model run
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.OutputMetrics">
            <summary>
            Indicates whether to output metric information
            </summary>
        </member>
        <member name="F:Madingley.OutputGrid.Metrics">
            <summary>
            Instance of the class to calculate ecosystem metrics
            </summary>
        </member>
        <member name="M:Madingley.OutputGrid.SpawnDatasetViewer">
            <summary>
            Spawn dataset viewer for the live outputs
            </summary>
        </member>
        <member name="M:Madingley.OutputGrid.InitialiseTraitBasedOutputs(Madingley.FunctionalGroupDefinitions,Madingley.FunctionalGroupDefinitions)">
            <summary>
            Set up the necessary architecture for generating outputs arranged by trait value
            </summary>
            <param name="cohortFunctionalGroupDefinitions">Functional group definitions for cohorts in the model</param>
            <param name="stockFunctionalGroupDefinitions">Functional group definitions for stocks in the model</param>
        </member>
        <member name="P:Madingley.OutputGrid.OutputPath">
            <summary>
            Get the path to the output folder
            </summary>
        </member>
        <member name="T:Madingley.OutputGrid.OutputDetailLevel">
            <summary>
            Designates the level of output detail
            </summary>
        </member>
        <member name="F:Madingley.OutputModelState._OutputPath">
            <summary>
            The path to the output folder
            </summary>
        </member>
        <member name="F:Madingley.OutputModelState.StateOutput">
            <summary>
            Dataset object to handle grid-based outputs
            </summary>
        </member>
        <member name="F:Madingley.OutputModelState.DataConverter">
            <summary>
            An instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputModelState.SDSCreator">
            <summary>
            Instance of the class to create SDS objects
            </summary>
        </member>
        <member name="F:Madingley.OutputModelState.StateWriter">
            <summary>
            A streamwriter instance for outputting data on interactions between cohorts
            </summary>
        </member>
        <member name="F:Madingley.OutputModelState.SyncStateWriter">
            <summary>
            A synchronized version of the streamwriter for outuputting data on the interactions between cohorts
            </summary>
        </member>
        <member name="P:Madingley.OutputModelState.OutputPath">
            <summary>
            Get the path to the output folder
            </summary>
        </member>
        <member name="T:Madingley.PredationTracker">
            <summary>
            Tracks the predation ecological process
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker._MassFlows">
            <summary>
            The flow of mass between prey and predator
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker._MassBins">
            <summary>
            Vector of mass bins to be used in the predation tracker
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker._NumMassBins">
            <summary>
            The number of mass bins to track predation for
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker._MissingValue">
            <summary>
            Missing data value to be used in the mass flows output
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker.MassFlowsDataSet">
            <summary>
            Dataset to output the Massflows data
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker.DataConverter">
            <summary>
            An instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="F:Madingley.PredationTracker.SDSCreator">
            <summary>
            Instance of the class to create SDS objects
            </summary>
        </member>
        <member name="M:Madingley.PredationTracker.#ctor(System.UInt32,System.Collections.Generic.List{System.UInt32[]},System.String,Madingley.FunctionalGroupDefinitions,System.Double,System.String,System.String,Madingley.MassBinsHandler,System.Int32)">
            <summary>
            Set up the predation tracker
            </summary>_
            <param name="numTimeSteps">The total number of timesteps for this simulation</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="massFlowsFilename">Filename for outputs of the flows of mass between predators and prey</param>
            <param name="cohortDefinitions">The functional group definitions for cohorts in the model</param>
            <param name="missingValue">The missing value to be used in the output file</param>
            <param name="outputFileSuffix">The suffix to be applied to the output file</param>
            <param name="outputPath">The path to write the output file to</param>
            <param name="trackerMassBins">The mass bin handler containing the mass bins to be used for predation tracking</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
        </member>
        <member name="M:Madingley.PredationTracker.RecordFlow(System.UInt32,System.Double,System.Double,System.Double)">
            <summary>
            Record mass flow in an eating event
            </summary>
            <param name="timestep">The current model time step</param>
            <param name="preyBiomass">The individual body mass of the prey</param>
            <param name="predatorBiomass">The individual body mass of the predator</param>
            <param name="massFlow">The amount of mass consumed in the predation event</param>
        </member>
        <member name="M:Madingley.PredationTracker.AddTimestepFlows(System.Int32)">
            <summary>
            Add the mass flows from the current timestep to the dataset
            </summary>
            <param name="timeStep">the current timestep</param>
        </member>
        <member name="M:Madingley.PredationTracker.ResetPredationTracker">
            <summary>
            Resets the mass flows data array
            </summary>
        </member>
        <member name="M:Madingley.PredationTracker.CloseStreams">
            <summary>
            Close the predation tracker
            </summary>
        </member>
        <member name="P:Madingley.PredationTracker.MassFlows">
            <summary>
            Get and set the flow of mass between prey and predator
            </summary>
        </member>
        <member name="P:Madingley.PredationTracker.MissingValue">
            <summary>
            Get and set the missing data value to be used in the mass flows output
            </summary>
        </member>
        <member name="T:Madingley.ProcessTracker">
            <summary>
            Tracks diagnostics about the ecological processes
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackProcesses">
            <summary>
            Whether to track processes
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackReproduction">
            <summary>
            Instance of the reproduction tracker within the process tracker
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackPredation">
            <summary>
            Instance of predation tracker
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackEating">
            <summary>
            Instance of the eating tracker
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackGrowth">
            <summary>
            Instance of the growth tracker
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackMortality">
            <summary>
            Instance of the mortality tracker
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackExtinction">
            <summary>
            An instance of the extinction tracker
            </summary>
        </member>
        <member name="F:Madingley.ProcessTracker._TrackMetabolism">
            <summary>
            An instance of the metabolism tracker
            </summary>
        </member>
        <member name="M:Madingley.ProcessTracker.#ctor(System.UInt32,System.Single[],System.Single[],System.Collections.Generic.List{System.UInt32[]},System.Collections.Generic.SortedList{System.String,System.String},System.Boolean,Madingley.FunctionalGroupDefinitions,System.Double,System.String,System.String,Madingley.MassBinsHandler,System.Boolean,System.Int32,Madingley.MadingleyModelInitialisation,System.Boolean,System.Single,System.Single)">
            <summary>
            Constructor for process tracker: Initialises the trackers for individual processes
            </summary>
            <param name="numTimesteps">The number of time steps in the model</param>
            <param name="lats">The latitudes of active grid cells in the model</param>
            <param name="lons">The longitudes of active grid cells in the model</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="Filenames">The filenames of the output files to write the tracking results to</param>
            <param name="trackProcesses">Whether to track processes</param>
            <param name="cohortDefinitions">The definitions for cohort functional groups in the model</param>
            <param name="missingValue">The missing value to use in process tracking output files</param>
            <param name="outputFileSuffix">The suffix to be applied to output files from process tracking</param>
            <param name="outputPath">The path to the folder to be used for process tracking outputs</param>
            <param name="trackerMassBins">The mass bins to use for categorising output data in the process trackers</param>
            <param name="specificLocations">Whether the model is being run for specific locations</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
            <param name="latCellSize">The size of grid cells in the latitudinal direction</param>
            <param name="lonCellSize">The size of grid cells in the longitudinal direction</param>
        </member>
        <member name="M:Madingley.ProcessTracker.RecordNewCohort(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.Int32,System.Collections.Generic.List{System.UInt32},System.UInt32)">
            <summary>
            Record a new cohort in the reproduction tracker
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="timestep">The current model time step</param>
            <param name="offspringCohortAbundance">The number of individuals in the new cohort</param>
            <param name="parentCohortAdultMass">The adult body mass of the parent cohort</param>
            <param name="functionalGroup">The functional group that the parent and offspring cohorts belong to</param>
            <param name="parentCohortIDs">All cohort IDs associated with the acting parent cohort</param>
            <param name="offspringCohortID">The cohort ID that has been assigned to the produced offspring cohort</param>
        </member>
        <member name="M:Madingley.ProcessTracker.TrackMaturity(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.Int32)">
            <summary>
            Track the maturity of a cohort in the reproduction tracker
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="timestep">The current model time step</param>
            <param name="birthTimestep">The birth time step of the cohort reaching maturity</param>
            <param name="juvenileMass">The juvenile mass of the cohort reaching maturity</param>
            <param name="adultMass">The adult mass of the cohort reaching maturity</param>
            <param name="functionalGroup">The functional group of the cohort reaching maturity</param>
        </member>
        <member name="M:Madingley.ProcessTracker.TrackPredationTrophicFlow(System.UInt32,System.UInt32,System.Int32,System.Int32,Madingley.FunctionalGroupDefinitions,System.Double,System.Double,System.Double,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Track the flow of mass between trophic levels during a predation event
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="fromFunctionalGroup">The index of the functional group being eaten</param>
            <param name="toFunctionalGroup">The index of the functional group that the predator belongs to</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="massEaten">The mass eaten during the predation event</param>
            <param name="predatorBodyMass">The body mass of the predator doing the eating</param>
            <param name="preyBodyMass">The body mass of the prey doing the eating</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.ProcessTracker.TrackHerbivoryTrophicFlow(System.UInt32,System.UInt32,System.Int32,Madingley.FunctionalGroupDefinitions,System.Double,System.Double,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Track the flow of mass between trophic levels during a herbivory event
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="toFunctionalGroup">The index of the functional group that the predator belongs to</param>
            <param name="cohortFunctionalGroupDefinitions">The functional group definitions of cohorts in the model</param>
            <param name="massEaten">The mass eaten during the herbivory event</param>
            <param name="predatorBodyMass">The body mass of the predator doing the eating</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.ProcessTracker.TrackPrimaryProductionTrophicFlow(System.UInt32,System.UInt32,System.Double)">
            <summary>
            Track the flow of mass between trophic levels during primary production of autotrophs
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="massEaten">The mass gained through primary production</param>
        </member>
        <member name="M:Madingley.ProcessTracker.WriteTimeStepTrophicFlows(System.UInt32,System.UInt32,System.UInt32,Madingley.MadingleyModelInitialisation,System.Boolean)">
            <summary>
            Write trophic flow data from the current time step to file 
            </summary>
            <param name="currentTimeStep">The current model time step</param>
            <param name="numLats">The number of grid cells, latitudinally, in the simulation</param>
            <param name="numLons">The number of grid cells, longitudinally, in the simulation</param>
            <param name="initialisation">The Madingley Model initialisation</param>
            <param name="marineCell">Whether the current cell is a marine cell</param>
        </member>
        <member name="M:Madingley.ProcessTracker.TrackTimestepGrowth(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Track growth of individuals in a cohort using the growth tracker
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="timeStep">The current model time step</param>
            <param name="currentBodyMass">The current body mass of individuals in the cohort</param>
            <param name="functionalGroup">The funcitonal group of the cohort being tracked</param>
            <param name="netGrowth">The net growth of individuals in the cohort this time step</param>
            <param name="metabolism">The mass lost to indivduals in the cohort through metabolism</param>
            <param name="predation">The mass gained by individuals in the cohort through predation</param>
            <param name="herbivory">The mass gained by individuals in the cohort through herbivory</param>
        </member>
        <member name="M:Madingley.ProcessTracker.RecordPredationMassFlow(System.UInt32,System.Double,System.Double,System.Double)">
            <summary>
            Records the flow of mass between a prey and its predator during a predation event
            </summary>
            <param name="currentTimeStep">The current model time step</param>
            <param name="preyBodyMass">The individual body mass of the prey</param>
            <param name="predatorBodyMass">The individual body mass of the predator</param>
            <param name="massFlow">The flow of mass between predator and prey</param>
        </member>
        <member name="M:Madingley.ProcessTracker.EndTimeStepPredationTracking(System.UInt32)">
            <summary>
            Adds the mass flows from predation in the current time step to the output file and then resets the mass flow tracker
            </summary>
            <param name="currentTimeStep">The current model time step</param>
        </member>
        <member name="M:Madingley.ProcessTracker.RecordHerbivoryMassFlow(System.UInt32,System.Double,System.Double)">
            <summary>
            Records the flow of mass between primary producers and herbivores during a herbivory event
            </summary>
            <param name="currentTimeStep">The current model time step</param>
            <param name="herbivoreBodyMass">The individual body mass of the herbivore</param>
            <param name="massFlow">The flow of mass between the primary producer and the herbivore</param>
        </member>
        <member name="M:Madingley.ProcessTracker.EndTimeStepHerbvioryTracking(System.UInt32)">
            <summary>
            Adds the mass flows from herbivory in the current time step to the output file and then resets the mass flow tracker
            </summary>
            <param name="currentTimeStep"></param>
        </member>
        <member name="M:Madingley.ProcessTracker.RecordMortality(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.UInt32,System.UInt32,System.Double,System.String)">
            <summary>
            Record an instance of mortality in the output file
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="birthTimeStep">The time step in which this cohort was born</param>
            <param name="timeStep">The current model time step</param>
            <param name="currentMass">The current body mass of individuals in the cohort</param>
            <param name="adultMass">The adult mass of individuals in the cohort</param>
            <param name="functionalGroup">The functional group of the cohort suffering mortality</param>
            <param name="cohortID">The ID of the cohort suffering mortality</param>
            <param name="numberDied">The number of individuals dying in this mortality event</param>
            <param name="mortalitySource">The type of mortality causing the individuals to die</param>
        </member>
        <member name="M:Madingley.ProcessTracker.OutputMortalityProfile(System.UInt32)">
            <summary>
            Output the mortality profile of a cohort becoming extinct
            </summary>
            <param name="cohortID">The ID of the cohort becoming extinct</param>
        </member>
        <member name="M:Madingley.ProcessTracker.RecordExtinction(System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Collections.Generic.List{System.UInt32})">
            <summary>
            Record the extinction of a cohort
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="currentTimeStep">THe current time step</param>
            <param name="merged">Whether the cohort becoming extinct has ever been merged</param>
            <param name="cohortIDs">The IDs of all cohorts that have contributed individuals to the cohort going extinct</param>
        </member>
        <member name="M:Madingley.ProcessTracker.TrackTimestepMetabolism(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Tracks the mass lost by individuals in a cohort in a time step through metabolism
            </summary>
            <param name="latIndex">The latitudinal index of the current grid cell</param>
            <param name="lonIndex">The longitudinal index of the current grid cell</param>
            <param name="timeStep">The current model time step</param>
            <param name="currentBodyMass">The body mass of individuals in the acting cohort</param>
            <param name="functionalGroup">The functional group index of the acting cohort</param>
            <param name="temperature">The ambient temperature in the grid cell</param>
            <param name="metabolicLoss">The mass lost by individuals through metabolism</param>
        </member>
        <member name="M:Madingley.ProcessTracker.CloseStreams(System.Boolean)">
            <summary>
            Close all tracker streams
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackProcesses">
            <summary>
            Get or set whether to track processes
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackReproduction">
            <summary>
            Get and set the reproduction tracker
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackPredation">
            <summary>
            Get and set the predation tracker
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackEating">
            <summary>
            Get and set the eating tracker
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackGrowth">
            <summary>
            Get and set the growth tracker
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackMortality">
            <summary>
            Get and set the mortality tracker
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackExtinction">
            <summary>
            Get and set the instance of the extinction tracker
            </summary>
        </member>
        <member name="P:Madingley.ProcessTracker.TrackMetabolism">
            <summary>
            Get and set the instance of the metabolism tracker
            </summary>
        </member>
        <member name="T:Madingley.ReproductionTracker">
            <summary>
            Tracks results associated with the reproduction process
            </summary>
        </member>
        <member name="F:Madingley.ReproductionTracker.NewCohortsFilename">
            <summary>
            File to write data on newly produced cohorts to
            </summary>
        </member>
        <member name="F:Madingley.ReproductionTracker.MaturityFilename">
            <summary>
            File to write data on maturity of cohorts to
            </summary>
        </member>
        <member name="F:Madingley.ReproductionTracker.NewCohortWriter">
            <summary>
            A streamwriter instance for outputting data on newly produced cohorts
            </summary>
        </member>
        <member name="F:Madingley.ReproductionTracker.SyncNewCohortWriter">
            <summary>
            Synchronized version of the streamwriter for outputting data on newly produced cohorts
            </summary>
        </member>
        <member name="F:Madingley.ReproductionTracker.MaturityWriter">
            <summary>
            A streamwriter instance for outputting data on maturity of cohorts
            </summary>
        </member>
        <member name="F:Madingley.ReproductionTracker.SyncMaturityWriter">
            <summary>
            A synchronized version of the streamwriter for outuputting data on the maturity of cohorts
            </summary>
        </member>
        <member name="M:Madingley.ReproductionTracker.#ctor(System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.List{System.UInt32[]},System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Sets up properties of the reproduction tracker
            </summary>
            <param name="numTimeSteps">The total number of timesteps for this simulation</param>
            <param name="numLats">The number of latitudes in the model grid</param>
            <param name="numLons">The number of longitudes in the model grid</param>
            <param name="cellIndices">List of indices of active cells in the model grid</param>
            <param name="newCohortsFilename">The filename to write information about new cohorts to</param>
            <param name="maturityFilename">The filename to write information about cohorts reaching maturity</param>
            <param name="outputFileSuffix">The suffix to apply to all output files from this model run</param>
            <param name="outputPath">The path to write all output files to</param>
            <param name="cellIndex">The index of the current cell in the list of all cells to run the model for</param>
        </member>
        <member name="M:Madingley.ReproductionTracker.RecordNewCohort(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.Int32,System.Collections.Generic.List{System.UInt32},System.UInt32)">
            <summary>
            Records information about new cohorts spawned in the model
            </summary>
            <param name="latIndex">The latitude index of the grid cell in which the cohort was spawned</param>
            <param name="lonIndex">The longitude index of the grid cell in which the cohort was spawned</param>
            <param name="timestep">The model timestep in which the spawning happened</param>
            <param name="offspringCohortAbundance">The abundance of the offspring cohort</param>
            <param name="parentCohortAdultMass">The adult mass of the parent cohort</param>
            <param name="functionalGroup">The functional group of the offspring cohort</param>
            <param name="parentCohortIDs">The cohort IDs associated with the parent cohort</param>
            <param name="offspringCohortID">The cohort ID used for the new offspring cohort</param>
        </member>
        <member name="M:Madingley.ReproductionTracker.TrackMaturity(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.Int32)">
            <summary>
            Record information about cohorts reaching maturity in the model
            </summary>
            <param name="latIndex">The latitude index of the grid cell in which the cohort was spawned</param>
            <param name="lonIndex">The longitude index of the grid cell in which the cohort was spawned</param>
            <param name="timestep">The model timestep in which the spawning happened</param>
            <param name="birthTimestep">The timestep in which the cohort was born</param>
            <param name="juvenileMass">The mass at which the cohort was born</param>
            <param name="adultMass">The maturity mass of the cohort</param>
            <param name="functionalGroup">The functional group of the cohort</param>
        </member>
        <member name="M:Madingley.ReproductionTracker.CloseStreams">
            <summary>
            Close the output streams for the reproduction tracker
            </summary>
        </member>
        <member name="T:Madingley.ViewGrid">
            <summary>
            This class is for viewing gridded data such as environmental data layers or state variables; it pauses program execution while the viewer is open
            </summary>
        </member>
        <member name="F:Madingley.ViewGrid.DataConverter">
            <summary>
            An instance of the class to convert data between arrays and SDS objects
            </summary>
        </member>
        <member name="M:Madingley.ViewGrid.#ctor">
            <summary>
            Constructor for the grid viewer: initialses relevant objects
            </summary>
        </member>
        <member name="M:Madingley.ViewGrid.PauseProgram(System.Double[0:,0:]@,System.String,System.Single[],System.Single[],System.Double)">
            <summary>
            Copy an georeferenced array (should be by reference!) to a grid in order to view it, then spawn the data set viewer
            <param name="gridToView">The grid to be viewed</param>
            <param name="variableName">The name of the variable to be viewed</param>
            <param name="lats">A vector of latitudes associated with the grid</param>
            <param name="lons">A vector of longitudes associated with the grid</param>
            <param name="gridMissingValue">The missing value for the grid to view</param>
            </summary>
        </member>
        <member name="M:Madingley.ViewGrid.SnapshotView(Microsoft.Research.Science.Data.DataSet@,System.Object@)">
            <summary>
            Provides a snapshot view of an SDS
            </summary>
            <param name="DataSetToView">The name of the SDS to view</param>
            <param name="handle">An object handle for the viewer instance; send the same handle to prevent multiple instances of SDS viewer opening</param>
            <todoD>Need to update to be able to select which variable to view</todoD>
            <todoD>Pass sleep length</todoD>
        </member>
        <member name="M:Madingley.ViewGrid.AsynchronousView(Microsoft.Research.Science.Data.DataSet@,System.String)">
            <summary>
            Asynchronously views an SDS
            </summary>
            <param name="DataSetToView">The name of the SDS to view</param>
            <param name="viewingParameters">A string of viewing parameters ('hints') to pass to SDS viewer</param>
            <todoD>Need to update to be able to select which variable to view</todoD>
            <todoD>Pass sleep length</todoD>
            <todoD>UPdate title on each timestep</todoD>
        </member>
        <member name="M:Madingley.ViewGrid.AsynchronousView(Microsoft.Research.Science.Data.DataSet@)">
            <summary>
            Asynchronously views an SDS
            </summary>
            <param name="DataSetToView">The name of the SDS to view</param>
            <todoD>Need to update to be able to select which variable to view</todoD>
            <todoD>Pass sleep length</todoD>
            <todoD>UPdate title on each timestep</todoD>
        </member>
        <member name="T:Madingley.NonStaticSimpleRNG">
            <summary>
            SimpleRNG is a simple random number generator based on 
            George Marsaglia's MWC (multiply with carry) generator.
            Although it is very simple, it passes Marsaglia's DIEHARD
            series of random number generator tests.
            
            Written by John D. Cook 
            http://www.johndcook.com
            </summary>
        </member>
        <member name="F:Madingley.NonStaticSimpleRNG.m_w">
            <summary>
            Integer for George Marsaglia's MWC algorithm 
            </summary>
        </member>
        <member name="F:Madingley.NonStaticSimpleRNG.m_z">
            <summary>
            Integer for George Marsaglia's MWC algorithm
            </summary>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.#ctor">
            <summary>
            Constructor the random number generator: sets default values for the integers for George Marsaglia's MWC algorithm
            </summary>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.SetSeed(System.UInt32,System.UInt32)">
            <summary>
            Set the seed of the random number generator using the specified integers
            </summary>
            <param name="u">An integer</param>
            <param name="v">An integer</param>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.SetSeed(System.UInt32)">
            <summary>
            Set the seed of the random number generator using the specified integer
            </summary>
            <param name="u">An integer</param>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.SetSeedFromSystemTime">
            <summary>
            Set the seed of the random number generator based on the system time
            </summary>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetUniform">
            <summary>
            A random draw from a uniform distribution between 0 and 1
            </summary>
            <returns>A random draw from a uniform distribution between 0 and 1</returns>
            <remarks>This will not return either 0 or 1</remarks>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetUint">
            <summary>
            Get a random unsigned integer using uses George Marsaglia's MWC algorithm
            </summary>
            <returns>A random unsigned integer using uses George Marsaglia's MWC algorithm</returns>
            <remarks>See http://www.bobwheeler.com/statistics/Password/MarsagliaPost.txt </remarks>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetNormal">
            <summary>
            A random draw from a normal distribution with mean 0 and standard deviation 1
            </summary>
            <returns>A random draw from a normal distribution with mean 0 and standard deviation 1</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetNormal(System.Double,System.Double)">
            <summary>
            A random draw from a normal distribution
            </summary>
            <param name="mean">The mean of the normal distribution</param>
            <param name="standardDeviation">The standard deviation of the normal distribution</param>
            <returns>A random draw from a normal distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetExponential">
            <summary>
            A random draw from an exponential distribution with mean 1
            </summary>
            <returns>A random draw from an exponential distribution with mean 1</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetExponential(System.Double)">
            <summary>
            A random draw from the exponential distribution
            </summary>
            <param name="mean">The mean of the exponential distribution</param>
            <returns>A random draw from the exponential distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetGamma(System.Double,System.Double)">
            <summary>
            A random draw from the gamma distribution
            </summary>
            <param name="shape">The shape parameter of the gamma distribution</param>
            <param name="scale">The scale parameter of the gamma distribution</param>
            <returns>A random draw from the gamma distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetChiSquare(System.Double)">
            <summary>
            A random draw from the chi-square distribution
            </summary>
            <param name="degreesOfFreedom">The degrees of freedom</param>
            <returns>A random draw from the chi-square distribution</returns>
            <remarks>A chi squared distribution with n degrees of freedom is a gamma distribution with shape n/2 and scale 2</remarks>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetInverseGamma(System.Double,System.Double)">
            <summary>
            A random draw from the inverse-gamma distribution
            </summary>
            <param name="shape">The shape parameter of the inverse-gamma distribution</param>
            <param name="scale">The scale parameter of the inverse-gamma distribution</param>
            <returns>A random draw from the inverse-gamma distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetWeibull(System.Double,System.Double)">
            <summary>
            A random draw from the Weibull distribution
            </summary>
            <param name="shape">The shape parameter of the Weibull distribution</param>
            <param name="scale">The scale parameter of the Weibull distribution</param>
            <returns>A random draw from the Weibull distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetCauchy(System.Double,System.Double)">
            <summary>
            A random draw from the Cauchy distribution
            </summary>
            <param name="median">The median of the Cauchy distribution</param>
            <param name="scale">The scale parameter of the Cauchy distribution</param>
            <returns>A random draw from the Cauchy distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetLaplace(System.Double,System.Double)">
            <summary>
            A random draw from the Laplace distribution
            </summary>
            <param name="mean">The mean of the Laplace distribution</param>
            <param name="scale">The scale parameter of the Laplace distribution</param>
            <returns>A random draw from the Laplace distribution</returns>
            <remarks>The Laplace distribution is also known as the double exponential distribution</remarks>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetLogNormal(System.Double,System.Double)">
            <summary>
            A random draw from a lognormal distribution
            </summary>
            <param name="mu">Mean of the lognormal distribution</param>
            <param name="sigma">Standard deviation of the lognormal distribution</param>
            <returns>A random draw from a lognormal distribution</returns>
        </member>
        <member name="M:Madingley.NonStaticSimpleRNG.GetBeta(System.Double,System.Double)">
            <summary>
            A random draw from the beta distribution
            </summary>
            <param name="a">Beta distribution 'a' parameter</param>
            <param name="b">Beta distribution 'b' parameter</param>
            <returns>A random draw from the beta distribution</returns>
        </member>
        <member name="T:Timing.StopWatch">
            <summary>
            Timer to track time elapsed
            </summary>
        </member>
        <member name="F:Timing.StopWatch._AccumulatedTime">
            <summary>
            The time accumulated by a given stopwatch instance
            </summary>
        </member>
        <member name="F:Timing.StopWatch.startTime">
            <summary>
            The start time of a given stopwatch run
            </summary>
        </member>
        <member name="F:Timing.StopWatch.stopTime">
            <summary>
            The stop time of a given stopwatch run
            </summary>
        </member>
        <member name="F:Timing.StopWatch.running">
            <summary>
            Whether the stopwatch is running
            </summary>
        </member>
        <member name="M:Timing.StopWatch.Start">
            <summary>
            Start the stopwatch
            </summary>
        </member>
        <member name="M:Timing.StopWatch.Stop">
            <summary>
            Stop the stopwatch
            </summary>
        </member>
        <member name="M:Timing.StopWatch.GetElapsedTime">
            <summary>
            Get the non-cumulative elapsed time of a stopwatch run in milliseconds
            </summary>
            <returns>Elapsed time since stopwatch started in milliseconds</returns>
        </member>
        <member name="M:Timing.StopWatch.GetElapsedTimeSecs">
            <summary>
            Get the non-cumulative elapsed time of a stopwatch run in seconds
            </summary>
            <returns>Elapsed time since stopwatch started in seconds</returns>
        </member>
        <member name="P:Timing.StopWatch.AccumulatedTime">
            <summary>
            Get or set the time accumulated by a given stopwatch instance
            </summary>
        </member>
        <member name="T:Madingley.UtilityFunctions">
            <summary>
            Generic functions
            </summary>
        </member>
        <member name="M:Madingley.UtilityFunctions.ConvertToM180To180(System.Double[])">
            <summary>
            If longitudinal cell coordinates run from 0 to 360, the convert to -180 to 180 values
            </summary>
            <param name="lons">The longitudinal coorindates of the cells in the model grid</param>
        </member>
        <member name="M:Madingley.UtilityFunctions.RandomlyOrderedIndices(System.UInt32)">
            <summary>
            Generate a random order in which cohorts will be subjected to ecological processes
            </summary>
            <param name="numberIndices">The number of cohorts in the current grid cell</param>
            <returns>A vector of randomly ordered integers corresponding to the cohorts in the grid cell</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.NonRandomlyOrderedCohorts(System.UInt32,System.UInt32)">
            <summary>
            Generate a non-random order in which cohorts will be subjected to ecological processes
            </summary>
            <param name="cohortNumber">The number of cohorts in the current grid cell</param>
            <param name="currentTimeStep">The current time step of the model</param>
            <returns>A vector of non-randomly ordered integers corresponding to the cohorts in the grid cell</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.GetCurrentMonth(System.UInt32,System.String)">
            <summary>
            Get the month corresponding to the current time step
            </summary>
            <param name="currentTimestep">The current model time step</param>
            <param name="modelTimestepUnits">The time step units</param>
            <returns>The month corresponding to the current time step</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.ConvertTimeUnits(System.String,System.String)">
            <summary>
            Calculates factors to convert between different time units
            </summary>
            <param name="fromUnit">Time unit to convert from</param>
            <param name="toUnit">Time unit to convert to</param>
            <returns>Factor to convert between time units</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.FindJaggedArrayIndex(System.UInt32,System.UInt32[][],System.UInt32)">
            <summary>
            For a given cohort index, return a vector pair of values corresponding to the cohort's location in the jagged array of grid cell cohorts
            </summary>
            <param name="valueToFind">The index of the cohort (values range between zero and the number of cohorts in the jagged arrray)</param>
            <param name="arrayToSearch">The jaggged array of cohorts, where rows correspond to functional groups, and columns to cohorts within functional groups</param>
            <param name="totalNumberOfCohorts">The total number of cohorts in the grid cell</param>
            <returns>The position of the specified cohort in the jagged array of grid cell cohorts, where the first value is the row index (functional group) and the second value is the column index (position within functional group)</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.ConvertSqMToSqDegrees(System.Double,System.Double)">
            <summary>Converts values per square km to per square degree, given cell latitude</summary>
            <param name="valueToConvert">The value per square km</param>
            <param name="latitude">The latitude of the grid cell</param>
            <returns>The specified value converted to per square degree </returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.LogNormalPDF(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the probability of a particular value under a log-normal distribution with specified mean and standard deviation
            </summary>
            <param name="xValue">The value to return the probability of under the log-normal distribtuion, in identity space</param>
            <param name="meanIdentity">The mean of the log-normal distribution, in identity space</param>
            <param name="standardDeviation">The standard deviation of the log-normal distribution, in log space</param>
            <returns>The probability of the specified value under the specified log-normal distribution</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.NormalPDF(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the probability of a particular value under a normal distribution with specified mean and standard deviation
            </summary>
            <param name="xValue">The value to return the probability of under the normal distribtuion</param>
            <param name="meanValue">The mean of the normal distribution</param>
            <param name="standardDeviation">The standard deviation of the normal distribution</param>
            <returns>The probability of the specified value under the specified normal distribution</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.CalculateGridCellArea(System.Double,System.Double,System.Double)">
            <summary>
            Calculate the area of a grid cell in square km, given its dimensions and geographical position
            </summary>
            <param name="latitude">The latitude of the bottom-left corner of the grid cell</param>
            <param name="lonCellSize">The longitudinal dimension of the grid cell</param>
            <param name="latCellSize">The latitudinal dimension of the grid cell</param>
            <returns>The area in square km of the grid cell</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.CalculateLengthOfDegreeLatitude(System.Single)">
            <summary>
            Calculate the length of a degree of latitude at a particular latitude
            </summary>
            <param name="latitude">The latitude of the bottom-left corner of the grid cell</param>
            <returns>The length of a degree of latitude in kilometres</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.CalculateLengthOfDegreeLongitude(System.Single)">
            <summary>
            Calculate the length of a degree of longitude at a particular latitude
            </summary>
            <param name="latitude">The latitude of the bottom-left corner of the grid cell</param>
            <returns>The length of a degree of longitude in kilometres</returns>
        </member>
        <member name="M:Madingley.UtilityFunctions.DegreesToRadians(System.Double)">
            <summary>
            Convert from degrees to radians
            </summary>
            <param name="degrees">The value in degrees to convert</param>
            <returns>The value converted to radians</returns>
        </member>
    </members>
</doc>
